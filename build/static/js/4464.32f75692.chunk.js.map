{"version":3,"file":"static/js/4464.32f75692.chunk.js","mappings":"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","sources":["app/deals/Update.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios'\r\nimport {postData, url,writeDate,postAttachment,convertDate} from '../../action'\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nconst Update = () => {\r\n    const {id}=useParams()\r\n    const [date,setDate] =React.useState(new Date())\r\n    const [Name,setName] = React.useState()\r\n    const [Conditions,setConditions]= React.useState()\r\n    const [Code,setCode]= React.useState(null)\r\n    const [Discount,setDiscount]= React.useState()\r\n    const [Price,setPrice]= React.useState()\r\n    const [OpeningTime,setOpeningTime]= React.useState()\r\n    const [OpeningDays,setOpeningDays]= React.useState()\r\n    const [For,setFor]= React.useState()\r\n    const [image,setImage]= React.useState()\r\n    const [Brands,setBrands]= React.useState()\r\n    const [Error,setError]= React.useState()\r\n    const [Type,setType]= React.useState()\r\n    const [popularity,setpopularity]= React.useState(0)\r\n    const brands=useSelector(state => state.brands)\r\n    const auth = getAuth(app)\r\n    const [Valid,setValid]= React.useState()\r\n    const [PromoCode,setPromoCode]= React.useState(true)\r\n    const [ImageSize,setImageSize]= React.useState(false)\r\n    const deals = useSelector(state => state.deals)\r\n    const [text,setText]= React.useState()\r\n    const [times,setTimes] =React.useState()\r\n    const [ValidFor,setValidFor]= React.useState()\r\n   const [Used,setUsed]= React.useState()\r\n   const [Remember, setRemember]= React.useState()\r\n   const [Application,setApplication]= React.useState()\r\n\r\n    React.useEffect(() => {\r\n      if(deals&&brands){\r\n        let arr=deals.filter(d=>d.id ==id)\r\n        setName(arr[0].name)\r\n        setConditions(arr[0].conditions)\r\n        setCode(arr[0].code)\r\n        setDiscount(arr[0].discount)\r\n        setPrice(arr[0].price)\r\n        setOpeningTime(arr[0].time)\r\n        setOpeningDays(arr[0].days)\r\n        setFor(arr[0].forr)\r\n        setBrands(brands.filter(data => data.id ==arr[0].brand_id))\r\n        setType(arr[0].type)\r\n        setValid(writeDate(new Date(arr[0].till)))\r\n        setText(\"<p>\"+arr[0].days+\"</p>\")\r\n        setTimes(\"<p>\"+arr[0].time+\"</p>\")\r\n        setValidFor(arr[0].valid)\r\n        setUsed(arr[0].used)\r\n        setApplication(arr[0].application)\r\n        setRemember(arr[0].remember)\r\n      }\r\n    },[deals+brands])\r\n\r\n    const imageSize=async(height,width,file)=>{\r\n      var url = URL.createObjectURL(file[0]);\r\n      var img = new Image;\r\n      \r\n      img.onload = function() {\r\n        if(img.width==width && img.height==height){\r\n          console.log(\"correct\")\r\n          setImageSize(true);\r\n          return true;\r\n        }else{\r\n          setImageSize(false);\r\n          URL.revokeObjectURL(img.src);\r\n          return false;\r\n        }\r\n      }\r\n      img.src = url;\r\n    }\r\n    const changeImage=(file)=>{\r\n      const data=new FormData()\r\n      data.append('file', file[0])\r\n      Axios.post(url+'/uploadWithData',data).then(res=>{\r\n        if(res.data.url){\r\n          postData(url + '/updateData',{\r\n            auth: auth.currentUser,\r\n            tableName: 'deals',\r\n            columns: ['image'],\r\n            values: [res.data.url],\r\n            condition:'id='+id\r\n          }).then(result => {\r\n            console.log(result);\r\n            setError('Image Saved.')\r\n          })\r\n        }\r\n      })\r\n    }\r\n    const saveDeals = () => {\r\n      \r\n      if(!Name || !Conditions || !OpeningTime || !OpeningDays || !For || !Brands || !Type || !Valid){\r\n        setError('Fields can not be empty')\r\n        return\r\n      }\r\n      \r\n      //console.log(Brands)\r\n      //console.log(Name+','+Brands[0].id+','+writeDate(new Date())+','+'0'+','+Brands[0].name+','+Discount+','+Code+','+Conditions+','+Price+','+OpeningTime+','+OpeningDays+','+For+','+Type)\r\n      setError('Please wait...')\r\n      postData(url + '/updateData',{\r\n        auth:auth.currentUser,\r\n        tableName: 'deals',\r\n        columns: [`name`, `brand_id`, `brand`, `code`, `conditions`, `price`, `time`, `days`, `type`,`forr`,`till`,`discount`,`used`,`valid`,`application`,`remember`],\r\n        values: [Name,Brands[0].id,Brands[0].name,Code,Conditions,Price?Price:'',OpeningTime,OpeningDays,Type,For,Valid,Discount?Discount:'',Used?Used:'',ValidFor?ValidFor:'',Application?Application:'',Remember?Remember:''],\r\n        condition:'id='+ id\r\n      }).then(result=>{\r\n          //alert('Successfully Update data')\r\n     // window.location.reload()\r\n      setError('Files are saved. You can reload the page now.')\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      },500)\r\n        console.log(result)\r\n      })\r\n     \r\n    }\r\n  \r\n    return (\r\n        <div>\r\n          <div className=\"page-header\">\r\n            <h3 className=\"page-title\"> Update Deals </h3>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Deals</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Update</li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Information</h4>\r\n                  <form className=\"form-sample\">\r\n                    <p className=\"card-description\"> Deals info </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Title</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Name} onChange={(e)=>setName(e.target.value)}  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Valid for</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={For} onChange={(e)=>setFor(e.target.value)} placeholder='who can get it.' type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <div className=\"col-sm-9\" onChange={(e)=>{\r\n                            setPromoCode(!PromoCode)\r\n                          }}>\r\n                          <input value={true} className=\"form-check-input\" type=\"radio\" checked={PromoCode}/>\r\n                          <label style={{\r\n                            marginTop:'3px'\r\n                          }} className=\"form-check-label\">Promo Code</label>\r\n                          <br/>\r\n                          <input value={false} className=\"form-check-input\" type=\"radio\" checked={!PromoCode}/>\r\n                          <label style={{\r\n                            marginTop:'3px'\r\n                          }} className=\"form-check-label\">Request Button</label>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      {\r\n                        PromoCode?(\r\n                          <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Code</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Code?Code:''} onChange={(e)=>setCode(e.target.value)} placeholder='6 digit code'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                        ):(<></>)\r\n                      }\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Conditions</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Conditions} onChange={(e)=>setConditions(e.target.value)} placeholder='type all your condition' type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Price</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Price} onChange={(e)=>setPrice(e.target.value)} placeholder='your price'  type=\"number\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">New Price</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Discount} onChange={(e)=>setDiscount(e.target.value)} placeholder='eg. New price here' type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                        \r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Opening Days</label>\r\n                          <div className=\"col-sm-9\">\r\n                          {\r\n                            text?(\r\n                              <CKEditor\r\n                             editor={ ClassicEditor }\r\n                             data={text}\r\n                             onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        \r\n                        setOpeningDays(data.replace(/<\\/?[^>]+(>|$)/g, \"\"))\r\n                        \r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        //console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                       // console.log( 'Focus.', editor );\r\n                    } }\r\n                />\r\n                            ):(<></>)\r\n                          }\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Opening Times</label>\r\n                          <div className=\"col-sm-9\">\r\n                         {\r\n                          times?(\r\n                            <CKEditor\r\n                             editor={ ClassicEditor }\r\n                             data={times}\r\n                             onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        setOpeningTime(data.replace(/<\\/?[^>]+(>|$)|&nbsp;/g, \" \"))\r\n                        \r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        //console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                       // console.log( 'Focus.', editor );\r\n                    } }\r\n                />\r\n                          ):(<></>)\r\n                         }\r\n                          </div>\r\n                        </Form.Group>\r\n                        \r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Select Brand</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select value={Brands?Brands[0].id:''} onChange={(e)=>{\r\n                              let data=brands.filter(data => data.id ==e.target.value);\r\n                              setBrands(data);\r\n                              console.log(data)\r\n                            }} className=\"form-control\">\r\n                            <option value=''>Select</option>\r\n                             {\r\n                              brands?(\r\n                                brands.map((doc, i)=>(\r\n                                  <option value={doc.id} key={i}>{doc.name}</option>\r\n                                ))\r\n                              ):(\r\n                                <option>No Brands</option>\r\n                              )\r\n                             }\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        {\r\n                          /*\r\n                          <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Image</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>{\r\n                            setImage(e.target.files)\r\n                            imageSize(500,1320,e.target.files)\r\n                          }} name='file' type=\"file\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                          */\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      {\r\n                        /*\r\n                        <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Type</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Type?Type:''} onChange={(e)=>setType(e.target.value)} placeholder='eg. pizza,burger,hair cut.. '  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                        */\r\n                      }\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Valid till</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Valid} onChange={(e)=>setValid(e.target.value)} placeholder='type of your deal'  type=\"date\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Valid for</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={ValidFor} onChange={(e)=>setValidFor(e.target.value)} placeholder='Valid for whose'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                     \r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Application for</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Application} onChange={(e)=>setApplication(e.target.value)} placeholder='type of your deal'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">How to use</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Used} onChange={(e)=>setUsed(e.target.value)} placeholder='How to use this offer'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                     \r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Things to remember</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Remember} onChange={(e)=>setRemember(e.target.value)} placeholder='type things to remember'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    \r\n                  </div>\r\n                    \r\n                    {Error?(\r\n                    <div className=\"alert alert-primary\" role=\"alert\">{Error}</div>\r\n                  ):(\r\n                    <></>\r\n                  )}\r\n                  \r\n                  </form>\r\n                  <button onClick={saveDeals}  className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n};\r\n\r\nexport default Update;"],"names":["id","useParams","React","Date","Name","setName","Conditions","setConditions","Code","setCode","Discount","setDiscount","Price","setPrice","OpeningTime","setOpeningTime","OpeningDays","setOpeningDays","For","setFor","Brands","setBrands","Error","setError","Type","setType","brands","useSelector","state","auth","getAuth","app","Valid","setValid","PromoCode","setPromoCode","deals","text","setText","times","setTimes","ValidFor","setValidFor","Used","setUsed","Remember","setRemember","Application","setApplication","arr","filter","d","name","conditions","code","discount","price","time","days","forr","data","brand_id","type","writeDate","till","valid","used","application","remember","className","href","onClick","event","preventDefault","value","onChange","e","target","placeholder","checked","style","marginTop","CKEditor","editor","ClassicEditor","onReady","console","log","getData","replace","onBlur","onFocus","map","doc","i","role","postData","url","currentUser","tableName","columns","values","condition","then","result","setTimeout","window","location","reload"],"sourceRoot":""}