{"version":3,"file":"static/js/503.35d2f0b5.chunk.js","mappings":"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","sources":["app/customer/Order.js"],"sourcesContent":["import React from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport { Dropdown, ButtonGroup, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { postData, url, setHotelBooking, convertDate, writeDate,setBookAppointment } from '../../action';\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\n\r\nconst Order = () => {\r\n    const [Checked, setChecked] = React.useState('Hotels')\r\n    const hotelBooking = useSelector(state => state.hotelBooking)\r\n    const userInfo = useSelector(state => state.userInfo)\r\n    const hotels = useSelector(state => state.hotels)\r\n    const deals = useSelector(state => state.deals)\r\n    const bookAppointment= useSelector(state => state.bookAppointment)\r\n    const [data, setData] = React.useState([])\r\n    const [data2, setData2] = React.useState([])\r\n    const dispatch = useDispatch()\r\n    const auth = getAuth(app)\r\n    const [action, setAction] = React.useState(false)\r\n    const brands= useSelector(state => state.brands)\r\n    const [Page,setPage]= React.useState(1)\r\n    const [TotalPage,setTotalPage]= React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        if (hotels && hotelBooking && userInfo && deals && bookAppointment&& Checked == 'Hotels') {\r\n            let arr = []\r\n            hotelBooking.forEach((doc,i) => {\r\n                if(i<(Page*10) && i>=((Page*10)-10)){\r\n                let user = userInfo.filter(user => user.uid == doc.user_id)\r\n                let hotel = hotels.filter(hotel => hotel.id == doc.hotel_id)\r\n                let data = { data: doc, user: user[0], hotel: hotel[0] }\r\n                arr.push(data)\r\n                }\r\n            })\r\n            setData(arr)\r\n            let number=(hotelBooking.length/10)\r\n            let floatNumber=parseInt(number)\r\n            let numPage=[]\r\n           for(let i=0; i<floatNumber; i++) {\r\n              numPage.push(floatNumber)\r\n            }\r\n      \r\n          if(number>floatNumber){\r\n          numPage.push(floatNumber)\r\n          setTotalPage(numPage)\r\n           }else{\r\n          setTotalPage(numPage)\r\n           }\r\n        } \r\n        if (hotels && hotelBooking && userInfo && bookAppointment&& deals && Checked == 'Deals') {\r\n            let arr = []\r\n            bookAppointment.forEach((doc,i) => {\r\n                if(i<(Page*10) && i>=((Page*10)-10)){\r\n                let user = userInfo.filter(user => user.uid == doc.uid)\r\n                let deal = deals.filter(deal => deal.id == doc.deal_id)\r\n                let data = { data: doc, user: user[0], deal: deal[0] }\r\n                arr.push(data)\r\n                }\r\n            })\r\n            setData2(arr)\r\n            let number=(bookAppointment.length/10)\r\n            let floatNumber=parseInt(number)\r\n            let numPage=[]\r\n           for(let i=0; i<floatNumber; i++) {\r\n              numPage.push(floatNumber)\r\n            }\r\n      \r\n          if(number>floatNumber){\r\n          numPage.push(floatNumber)\r\n          setTotalPage(numPage)\r\n           }else{\r\n          setTotalPage(numPage)\r\n           }\r\n        }\r\n    }, [Checked+Page+hotels+deals+userInfo+bookAppointment+hotelBooking])\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'hotel_booking',\r\n            orderColumn: 'date'\r\n        }).then(data => {\r\n            if (Array.isArray(data)) {\r\n                return dispatch(setHotelBooking(data));\r\n            }\r\n            console.log(data);\r\n        })\r\n    }, [action])\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'book_appointment',\r\n            orderColumn: 'date'\r\n        }).then(data => {\r\n            if (Array.isArray(data)) {\r\n                return dispatch(setBookAppointment(data));\r\n            }\r\n            console.log(data);\r\n        })\r\n    }, [action])\r\n\r\n\r\n    const acceptHotel = (data) => {\r\n        postData(url + '/setData', {\r\n            auth: auth.currentUser,\r\n            tableName: 'redeem_history',\r\n            columns: ['purches_type', 'purches_id', 'name', 'date', 'image', 'uid'],\r\n            values: ['hotel', data.hotel.id, data.hotel.name, writeDate(new Date()), data.hotel.image, data.user.uid]\r\n        }).then(d => {\r\n            if (d.insertId) {\r\n                postData(url + '/updateData', {\r\n                    tableName: 'hotel_booking',\r\n                    columns: ['visible'],\r\n                    values: [1],\r\n                    condition: 'id=' + data.data.id,\r\n                }).then(dt => {\r\n                    setAction(dt);\r\n                    console.log(dt);\r\n                })\r\n            }\r\n            console.log(d.message)\r\n        })\r\n        let user=userInfo.filter(d=>d.uid==data.user.uid)\r\n        if(user && user.length > 0 && user[0].email){\r\n            postData(url + '/sendMessage',{\r\n                title: 'Your Booking Request has been confirmed',\r\n                body:`This email is to confirm your booking on ${convertDate(data.data.check_in)} for a ${data.data.room} room at the ${data.hotel.name}. The check-in date shall be on ${convertDate(data.data.check_in)} and the check-out date shall be on ${convertDate(data.data.check_out)}.`,\r\n                uid: user[0].uid\r\n            }).then(response => {\r\n                console.log(response)\r\n            })\r\n            postData(url + '/sendEmail',{\r\n                to:user[0].email,\r\n                subject:'Your Booking Request has been confirmed - Smira Club',\r\n                text:`<p>Hello ${user[0].name}</p>\r\n                <p>This email is to confirm your booking on ${convertDate(data.data.check_in)} for a ${data.data.room} room at the ${data.hotel.name}. The check-in date shall be on ${convertDate(data.data.check_in)} and the check-out date shall be on ${convertDate(data.data.check_out)}.</p>\r\n\r\n               <p> Further details of your booking are listed below:</p>\r\n\r\n               <p> Number of guests: ${data.data.adult}A, ${data.data.children}C</p>\r\n\r\n               <p>Amenities: ${data.hotel.conditions}</p>\r\n\r\n              <p> If you have any inquiries, please do not hesitate to contact us.</p>\r\n\r\n            <p> We are looking forward to your visit and hope that you enjoy your stay.</p>\r\n\r\n\r\n               <p> Best regards</p>\r\n              <p>  Smira Club</p>\r\n\r\n                 \r\n               <p> Ranjit Studio Compound, </p>\r\n               <p> Ground & 1st Floor, </p>\r\n               <p> C-Block, Plot No. 115, </p>\r\n               <p> Dada Saheb Phalke Marg, </p>\r\n               <p> Opp. Bharatkshetra, Hindmata, </p>\r\n               <p> Dadar East, Mumbai, </p>\r\n                <p>Maharashtra 400014 </p>\r\n                 \r\n                <p>Contact No.</p> \r\n                <p>9819812456</p>\r\n               <p> 9833733477</p>\r\n               <p> 9820342389</p>\r\n                `\r\n            }).then(result => {\r\n                console.log(result);\r\n            })\r\n        }\r\n        \r\n    }\r\n    const declineHotel = (data) => {\r\n        postData(url + '/updateData', {\r\n            tableName: 'hotel_booking',\r\n            columns: ['visible'],\r\n            values: [1],\r\n            condition: 'id=' + data.data.id,\r\n        }).then(dt => {\r\n            setAction(dt);\r\n            console.log(dt);\r\n        })\r\n        let user=userInfo.filter(d=>d.uid==data.user.uid)\r\n        if(user && user.length > 0 && user[0].email){\r\n            postData(url + '/sendMessage',{\r\n                title: 'Your Booking Request has not been confirmed',\r\n                body:`We had received your request for a booking on ${convertDate(data.data.check_in)} for a ${data.data.room} room at the ${data.hotel.name}. We are very pleased to know that you want a booking with us, however, we regret to inform you that your request has NOT BEEN CONFIRMED due to non-availability of rooms or some technical reasons.`,\r\n                uid: user[0].uid\r\n            }).then(response => {\r\n                console.log(response)\r\n            })\r\n            postData(url + '/sendEmail',{\r\n                to:user[0].email,\r\n                subject:'Your Booking Request has not been confirmed - Smira Club',\r\n                text:`<p>Hello ${user[0].name}</p>\r\n                <p>We had received your request for a booking on ${convertDate(data.data.check_in)} for a ${data.data.room} room at the ${data.hotel.name}. We are very pleased to know that you want a booking with us, however, we regret to inform you that your request has NOT BEEN CONFIRMED due to non-availability of rooms or some technical reasons.</p>\r\n\r\n                <p>Sorry for the inconvenience. We assure you that we will be available in the future for you whenever you wish to make a booking.</p>\r\n\r\n                <p>Best Regards</p>\r\n                <p>Smira Club</p>\r\n                 \r\n               <p> Ranjit Studio Compound, </p>\r\n               <p> Ground & 1st Floor, </p>\r\n               <p> C-Block, Plot No. 115, </p>\r\n               <p> Dada Saheb Phalke Marg, </p>\r\n               <p> Opp. Bharatkshetra, Hindmata, </p>\r\n               <p> Dadar East, Mumbai, </p>\r\n                <p>Maharashtra 400014 </p>\r\n                 \r\n                <p>Contact No.</p> \r\n                <p>9819812456</p>\r\n               <p> 9833733477</p>\r\n               <p> 9820342389</p>\r\n                `\r\n            }).then(result => {\r\n                console.log(result);\r\n            })\r\n        }\r\n    }\r\n    const acceptDeal=(data)=>{\r\n        let brand=brands.filter(b => b.id==data.deal.brand_id)\r\n        postData(url + '/setData', {\r\n            auth: auth.currentUser,\r\n            tableName: 'redeem_history',\r\n            columns: ['purches_type', 'purches_id', 'name', 'date', 'image', 'uid'],\r\n            values: ['deal', data.deal.id, data.deal.name, writeDate(new Date()), brand[0].image, data.user.uid]\r\n        }).then(d => {\r\n            if (d.insertId) {\r\n                postData(url + '/updateData', {\r\n                    tableName: 'book_appointment',\r\n                    columns: ['visible'],\r\n                    values: [1],\r\n                    condition: 'id=' + data.data.id,\r\n                }).then(dt => {\r\n                    setAction(dt);\r\n                    console.log(dt);\r\n                })\r\n            }\r\n            console.log(d.message)\r\n        })\r\n        let user=userInfo.filter(d=>d.uid==data.user.uid)\r\n        if(user && user.length > 0 && user[0].email){\r\n            postData(url + '/sendEmail',{\r\n                to:user[0].email,\r\n                subject:'Confirmation mail for your appointment request',\r\n                text:`<p>Hello ${user[0].name}</p>\r\n                <p>Your appointment request for <strong>${data.deal.name}</strong> is accepted by SMIRA CLUB</p>\r\n                <p>To know details---Call us</p>\r\n                <p>Best Regards</p>\r\n                <p>Smira Club</p>\r\n                 \r\n               <p> Ranjit Studio Compound, </p>\r\n               <p> Ground & 1st Floor, </p>\r\n               <p> C-Block, Plot No. 115, </p>\r\n               <p> Dada Saheb Phalke Marg, </p>\r\n               <p> Opp. Bharatkshetra, Hindmata, </p>\r\n               <p> Dadar East, Mumbai, </p>\r\n                <p>Maharashtra 400014 </p>\r\n                 \r\n                <p>Contact No.</p> \r\n                <p>9819812456</p>\r\n               <p> 9833733477</p>\r\n               <p> 9820342389</p>\r\n                `\r\n            }).then(result => {\r\n                console.log(result);\r\n            })\r\n        }\r\n    }\r\n    const declineDeal=(data)=>{\r\n        postData(url + '/updateData', {\r\n            tableName: 'book_appointment',\r\n            columns: ['visible'],\r\n            values: [1],\r\n            condition: 'id=' + data.data.id,\r\n        }).then(dt => {\r\n            setAction(dt);\r\n            console.log(dt);\r\n        })\r\n        let user=userInfo.filter(d=>d.uid==data.user.uid)\r\n        if(user && user.length > 0 && user[0].email){\r\n            postData(url + '/sendEmail',{\r\n                to:user[0].email,\r\n                subject:'Rejection mail for your appointment request',\r\n                text:`<p>Hello ${user[0].name}</p>\r\n                <p>Your appointment request for <strong>${data.deal.name}</strong> is rejected by SMIRA CLUB due some issues.</p>\r\n                <p>To know details---Call us</p>\r\n                <p>Best Regards</p>\r\n                <p>Smira Club</p>\r\n                 \r\n               <p> Ranjit Studio Compound, </p>\r\n               <p> Ground & 1st Floor, </p>\r\n               <p> C-Block, Plot No. 115, </p>\r\n               <p> Dada Saheb Phalke Marg, </p>\r\n               <p> Opp. Bharatkshetra, Hindmata, </p>\r\n               <p> Dadar East, Mumbai, </p>\r\n                <p>Maharashtra 400014 </p>\r\n                 \r\n                <p>Contact No.</p> \r\n                <p>9819812456</p>\r\n               <p> 9833733477</p>\r\n               <p> 9820342389</p>\r\n                `\r\n            }).then(result => {\r\n                console.log(result);\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"page-header\">\r\n                <h3 className=\"page-title\"> All Orders </h3>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><a href=\"#\" onClick={event => event.preventDefault()}>Orders</a></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Action</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Select Type</h4>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle variant=\"btn btn-gradient-secondary\" id=\"dropdownMenuOutlineButton2\">\r\n                                    {Checked}\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Header>Order Type</Dropdown.Header>\r\n                                    <Dropdown.Item onClick={() => {\r\n                                        setChecked('Hotels')\r\n                                    }}>Hotels</Dropdown.Item>\r\n                                    <Dropdown.Item onClick={() => {\r\n                                        setChecked('Deals')\r\n                                    }}>Deals</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th> Name </th>\r\n                                            <th> Phone </th>\r\n                                            <th> {Checked} Name </th>\r\n                                            {Checked=='Hotels'?(<th> Check In </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Check Out </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Veg </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Non Veg </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Additional Note </th>):(<></>)}\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            Checked == 'Hotels' ? (\r\n                                                data.map((doc, i) => (\r\n                                                    <List key={i} data={doc}\r\n                                                        declineHotel={declineHotel}\r\n                                                        acceptHotel={acceptHotel} />\r\n                                                ))\r\n                                            ) : (\r\n                                                data2.map((doc, i) => (\r\n                                                    <List2 key={i} data={doc}\r\n                                                        declineHotel={declineDeal}\r\n                                                        acceptHotel={acceptDeal} />\r\n                                                ))\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                { TotalPage.length>1?(\r\n                    <nav style={{\r\n                        width: '100%',\r\n                        overflow: 'scroll'\r\n                    }} >\r\n                <ul className=\"pagination\">\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page>1){ \r\n                        setPage(Page-1)\r\n                    }\r\n                }} className=\"page-link\">Previous</button></li>\r\n                {\r\n                    TotalPage.map((doc, i) => (\r\n                      <li key={i} className={Page==(i+1)?\"page-item active\":\"page-item\"}><button onClick={()=>{\r\n                          setPage(i+1)\r\n                      }} className=\"page-link\">{i+1}</button></li>\r\n                     ))\r\n                }\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page<TotalPage.length){\r\n                        setPage(Page+1);\r\n                    }\r\n                }} className=\"page-link\">Next</button></li>\r\n                </ul>\r\n               </nav>\r\n                ):(\r\n                    <></>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Order;\r\nconst List = (props) => {\r\n    const doc = props.data\r\n    const [Visible, setVisible] = React.useState(doc.data.visible)\r\n    return (\r\n        <tr>\r\n            <td> {doc.user.name} </td>\r\n            <td> {doc.user.phone} </td>\r\n            <td>\r\n                {doc.hotel?doc.hotel.name:''}\r\n            </td>\r\n            <td> {convertDate(doc.data.check_in)} </td>\r\n            <td> {convertDate(doc.data.check_out)} </td>\r\n            <td> {doc.data.veg} </td>\r\n            <td> {doc.data.non_veg} </td>\r\n            <td> {doc.data.note} </td>\r\n            {\r\n                Visible == 1 ? (\r\n                    <td style={{ width: '200px' }}></td>\r\n                ) : (\r\n                    <td>\r\n                        <button onClick={() => {\r\n                            props.acceptHotel(doc)\r\n                            setVisible(1)\r\n                        }} className=\"btn btn-gradient-success btn-rounded btn-fw\">Accept</button>\r\n\r\n                        <button onClick={() => {\r\n                            props.declineHotel(doc)\r\n                            setVisible(1);\r\n                        }} style={{\r\n                            marginLeft: '10px'\r\n                        }} className=\"btn btn-gradient-danger btn-rounded btn-fw\">Cancel</button>\r\n                    </td>\r\n                )\r\n            }\r\n        </tr>\r\n    )\r\n}\r\nconst List2 = (props) => {\r\n    const doc = props.data\r\n    const [Visible, setVisible] = React.useState(doc.data.visible)\r\n    //console.log(doc.deal)\r\n    return (\r\n        <tr>\r\n            <td> {doc.user?doc.user.name:'...'} </td>\r\n            <td> {doc.user?doc.user.phone:'---'} </td>\r\n            <td>\r\n                {doc.deal && doc.deal.name?doc.deal.name:'...'}\r\n            </td>\r\n            {\r\n                Visible == 1 ? (\r\n                    <td style={{ width: '200px' }}></td>\r\n                ) : (\r\n                    <td>\r\n                        <button onClick={() => {\r\n                            props.acceptHotel(doc)\r\n                            setVisible(1)\r\n                        }} className=\"btn btn-gradient-success btn-rounded btn-fw\">Accept</button>\r\n\r\n                        <button onClick={() => {\r\n                            props.declineHotel(doc)\r\n                            setVisible(1);\r\n                        }} style={{\r\n                            marginLeft: '10px'\r\n                        }} className=\"btn btn-gradient-danger btn-rounded btn-fw\">Cancel</button>\r\n                    </td>\r\n                )\r\n            }\r\n        </tr>\r\n    )\r\n}"],"names":["React","Checked","setChecked","hotelBooking","useSelector","state","userInfo","hotels","deals","bookAppointment","data","setData","data2","setData2","dispatch","useDispatch","auth","getAuth","app","action","setAction","brands","Page","setPage","TotalPage","setTotalPage","arr","forEach","doc","i","user","filter","uid","user_id","hotel","id","hotel_id","push","number","length","floatNumber","parseInt","numPage","deal","deal_id","postData","url","tableName","orderColumn","then","Array","isArray","setHotelBooking","console","log","setBookAppointment","acceptHotel","currentUser","columns","values","name","writeDate","Date","image","d","insertId","condition","dt","message","email","title","body","convertDate","check_in","room","check_out","response","to","subject","text","adult","children","conditions","result","declineHotel","acceptDeal","brand","b","brand_id","declineDeal","className","href","onClick","event","preventDefault","variant","map","List","List2","style","width","overflow","props","visible","Visible","setVisible","phone","veg","non_veg","note","marginLeft"],"sourceRoot":""}