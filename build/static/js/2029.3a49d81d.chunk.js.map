{"version":3,"file":"static/js/2029.3a49d81d.chunk.js","mappings":"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","sources":["app/membership/Add.js","../node_modules/bs-custom-file-input/src/selector.js","../node_modules/bs-custom-file-input/src/util.js","../node_modules/bs-custom-file-input/src/eventHandlers.js","../node_modules/bs-custom-file-input/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { useSelector } from 'react-redux';\r\nimport {postData, url} from '../../action'\r\n\r\n\r\nconst Add = () => {\r\n    const [date,setDate] =React.useState(new Date())\r\n    const membership=useSelector(state => state.membership)\r\n    const [Hotels,setHotels]=React.useState()\r\n    const [Nights,setNights]=React.useState()\r\n    const [Accounts,setAccounts]=React.useState()\r\n    const [Price,setPrice]=React.useState()\r\n    const [Year,setYear]=React.useState()\r\n    const [Membership,setMembership]=React.useState('silver')\r\n    const [error,setError]=React.useState('')\r\n    const [Plans,setPlans]= React.useState()\r\n\r\n    React.useEffect(() => {\r\n      if(membership){\r\n        let arr=membership.filter(member => member.type ==Membership)\r\n        if(arr){\r\n          setHotels(arr[0].hotel)\r\n          setNights(arr[0].night)\r\n          setAccounts(arr[0].account)\r\n          setPrice(arr[0].price)\r\n          setYear(arr[0].time)\r\n          setPlans(arr[0].plans)\r\n        }\r\n      }\r\n    },[Membership])\r\n\r\n    const submit = () => {\r\n      if(!Hotels || !Nights || !Accounts || !Price || !Year || !Membership || !Plans){\r\n        setError('Fields cannot be empty')\r\n        return\r\n      }\r\n      if(isNaN(Hotels) && Hotels!='all'){\r\n        setError('Hotels can be only number or all.')\r\n        return\r\n      }\r\n      if(isNaN(Nights) && Nights!='unlimited'){\r\n        setError('Nights can be only number or unlimited.')\r\n        return\r\n      }\r\n      if(isNaN(Accounts) && Accounts!='no'){\r\n        setError('Accounts can be only number or no.')\r\n        return\r\n      }\r\n      setError('please wait...')\r\n      postData(url + '/updateData',{\r\n        tableName: 'membership',\r\n        columns:['price','time','night','hotel','account','plans'],\r\n        values: [Price,Year,Nights,Hotels,Accounts,Plans],\r\n        condition:\"type=\"+\"'\"+Membership+\"'\"\r\n      }).then(data=>{\r\n        \r\n        setError('Successfully updated the plan. You can reload the page')\r\n        setTimeout(() => {\r\n          window.location.reload()\r\n        },300)\r\n      }).catch(err=>{\r\n        console.log(err.message)\r\n      })\r\n\r\n    }\r\n    return (\r\n        <div>\r\n          <div className=\"page-header\">\r\n            <h3 className=\"page-title\"> Add Plans </h3>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Plans</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Add</li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Information</h4>\r\n                  <form className=\"form-sample\">\r\n                    <p className=\"card-description\">Edit plans and offer </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Select Plan</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select onChange={(e)=>{\r\n                              setMembership(e.target.value)\r\n\r\n                            }} className=\"form-control\">\r\n                            {\r\n                              membership?(\r\n                                membership.map((doc, i) =>(\r\n                                  <option key={i} value={doc.type}>{doc.name}</option>\r\n                                ))\r\n                              ):(\r\n                                <option>Select one</option>\r\n                              )\r\n                            }\r\n                              \r\n                             \r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Price</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Price} onChange={(e)=>setPrice(e.target.value)} placeholder='Price of the plan' type=\"number\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Time/year</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Year} onChange={(e)=>setYear(e.target.value)} placeholder=\"time period in hour\" type=\"number\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Nights ,can be unlimited or number</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Nights} onChange={(e)=>setNights(e.target.value)} placeholder=\"number of nights spend\" type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Hotels, can be all or number</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Hotels} onChange={(e)=>setHotels(e.target.value)} placeholder=\"number of hotel can stay\" type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Partner Account, can be no or number</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Accounts} onChange={(e)=>setAccounts(e.target.value)} \r\n                          placeholder='partner account count' type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Add plans details, comas separated</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <textarea value={Plans} onChange={(e)=>setPlans(e.target.value)} class=\"form-control\"\r\n                            placeholder='eg. 70 Nights / 2 Year validity,2 Room ,8 Peoples '\r\n                           id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      \r\n                    </div>\r\n                    {error?(\r\n                    <div class=\"alert alert-primary\" role=\"alert\">{error}</div>\r\n                  ):(\r\n                    <></>\r\n                  )}\r\n                  </form>\r\n                  <button onClick={submit}   className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n};\r\n\r\nexport default Add;","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"names":["React","Date","membership","useSelector","state","Hotels","setHotels","Nights","setNights","Accounts","setAccounts","Price","setPrice","Year","setYear","Membership","setMembership","error","setError","Plans","setPlans","arr","filter","member","type","hotel","night","account","price","time","plans","className","href","onClick","event","preventDefault","onChange","e","target","value","map","doc","i","name","placeholder","class","id","rows","role","isNaN","postData","url","tableName","columns","values","condition","then","data","setTimeout","window","location","reload","catch","err","console","log","message","Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","length","slice","call","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","File","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","files","file","join","indexOf","splittedValue","split","handleInputChange","this","inputValue","handleFormReset","customFileList","querySelectorAll","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener"],"sourceRoot":""}