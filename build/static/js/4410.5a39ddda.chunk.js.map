{"version":3,"file":"static/js/4410.5a39ddda.chunk.js","mappings":"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","sources":["app/sliders/Add.js","../node_modules/bs-custom-file-input/src/selector.js","../node_modules/bs-custom-file-input/src/util.js","../node_modules/bs-custom-file-input/src/eventHandlers.js","../node_modules/bs-custom-file-input/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { postData, url } from '../../action';\r\nimport app from '../../firebase';\r\nimport { getAuth } from 'firebase/auth';\r\nimport {useSelector} from 'react-redux'\r\nimport Axios from 'axios'\r\n\r\n\r\nconst Add = () => {\r\n  const [Data, setData] = React.useState(null)\r\n  const [Action, setAction] = React.useState(false)\r\n  const banner=useSelector(state => state.banner)\r\n  const auth=getAuth(app)\r\n  const [Error, setError]= React.useState()\r\n  const [Banner,setBanner]=React.useState()\r\n  const [Index, setIndex]= React.useState()\r\n  const [Files, setFiles]= React.useState()\r\n  const [Type, setType]= React.useState()\r\n  const [Details, setDetails]= React.useState()\r\n  const [Name, setName]= React.useState()\r\n  const brands=useSelector(state => state.brands)\r\n  const [ImageSize,setImageSize]= React.useState(false)\r\n  \r\n\r\n  React.useEffect(() => {\r\n    if(banner){\r\n    postData(url + '/getData', {\r\n      tableName: 'slider',\r\n      orderColumn: 'id'\r\n    }).then(data => {\r\n      if (Array.isArray(data)) {\r\n        let arr=banner;\r\n        //console.log(data)\r\n        data.forEach(dataItem => {\r\n          arr=arr.filter(d=>d.id!=dataItem.banner_id);\r\n        })\r\n        return setData(arr)\r\n      }\r\n      console.log(data.message)\r\n    })\r\n  }\r\n  }, [])\r\n \r\n  const save = () => {\r\n    setError('')\r\n    \r\n    if(!ImageSize){\r\n      setError('Image size must be 1320*500 size')\r\n      return\r\n    }\r\n    const data=new FormData()\r\n        data.append('file', Files[0])\r\n        Axios.post(url+'/uploadWithData',data).then(res=>{\r\n          if(res.data.url){\r\n            postData(url + '/setData',{\r\n              auth: auth.currentUser,\r\n              tableName: 'slider',\r\n              columns: ['name','image','brand_id'],\r\n              values: [Name?Name:'',res.data.url,Type?Type:'']\r\n            }).then(result => {\r\n              console.log(result);\r\n              if(result.insertId){\r\n                setError('Image Saved.')\r\n                setAction(!Action)\r\n              }else{\r\n                setError(result.message)\r\n              }\r\n            })\r\n          }\r\n        })\r\n  }\r\n  const addFlush=() => {\r\n    if(!Banner || !Index){\r\n      setError('Select banner image and index')\r\n      return \r\n    }\r\n    postData(url + '/updateData',{\r\n      tableName: 'banner',\r\n      columns: ['number'],\r\n      values:[0],\r\n      condition: 'number=' +Index\r\n    }).then(data => {\r\n      console.log(data)\r\n      postData(url + '/updateData',{\r\n        tableName:'banner',\r\n        columns:['number'],\r\n        values: [Index],\r\n        condition:'id='+Banner\r\n      }).then(data=>{\r\n        console.log(data)\r\n        if(data.affectedRows){\r\n          setError('Changes are saved')\r\n        }\r\n      })\r\n    })\r\n    \r\n  }\r\n  const imageSize=async(height,width,file)=>{\r\n    var url = URL.createObjectURL(file[0]);\r\n    var img = new Image;\r\n    \r\n    img.onload = function() {\r\n      if(img.width==width && img.height==height){\r\n        console.log(\"correct\")\r\n        setImageSize(true);\r\n        return true;\r\n      }else{\r\n        setImageSize(false);\r\n        URL.revokeObjectURL(img.src);\r\n        return false;\r\n      }\r\n    }\r\n    img.src = url;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\"> Add Slider </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Sliders</a></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Add</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"row\">\r\n                  <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Activities List</h4>\r\n                        <p className=\"card-description\"> Add slider images to show your offers!!\r\n                        </p>\r\n                        <div className=\"row\">\r\n          <div className=\"col-12 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>\r\n                <form className=\"form-sample\">\r\n                  <p className=\"card-description\"> Add slider for a single brand </p>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Title(Optional)</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='title of the banner' onChange={(e)=>setName(e.target.value)}  type=\"text\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Details</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>setDetails(e.target.value)} placeholder='optional' type=\"text\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Select Brand(Optional)</label>\r\n                        <div className=\"col-sm-9\">\r\n                          <select onChange={(e) =>{\r\n                            setType(e.target.value);\r\n                          }} className=\"form-control\">\r\n                         <option value=''>Select Brand</option>\r\n                          {\r\n                            brands?(\r\n                                brands.map((doc, i)=>(\r\n                                    <option key={i} value={doc.id}>{doc.name}</option>\r\n                                ))\r\n                            ):(\r\n                                <option value=''>No Brands</option>\r\n                            )\r\n                          }\r\n                          </select>\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Add Banner Image-1320*500</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>{\r\n                            setFiles(e.target.files)\r\n                            imageSize(500,1320,e.target.files)\r\n                            }}  type=\"file\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                  {Error?(\r\n                  <div className=\"alert alert-primary\" role=\"alert\">{Error}</div>\r\n                ):(\r\n                  <></>\r\n                )}\r\n                \r\n                </form>\r\n                <button onClick={save} className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Add;","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"names":["React","setData","Action","setAction","banner","useSelector","state","auth","getAuth","app","Error","setError","Files","setFiles","Type","setType","setDetails","Name","setName","brands","ImageSize","setImageSize","postData","url","tableName","orderColumn","then","data","Array","isArray","arr","forEach","dataItem","filter","d","id","banner_id","console","log","message","imageSize","height","width","file","URL","createObjectURL","img","Image","onload","revokeObjectURL","src","className","href","onClick","event","preventDefault","placeholder","onChange","e","target","value","type","map","doc","i","name","files","role","FormData","append","Axios","res","currentUser","columns","values","result","insertId","Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","length","slice","call","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","window","File","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","join","indexOf","splittedValue","split","handleInputChange","this","inputValue","handleFormReset","customFileList","querySelectorAll","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener"],"sourceRoot":""}