{"version":3,"file":"static/js/7963.97d4456f.chunk.js","mappings":"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","sources":["app/deals/Add.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios'\r\nimport {postData, url,writeDate,postAttachment} from '../../action'\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nconst Add = () => {\r\n    const [date,setDate] =React.useState(new Date())\r\n    const [Name,setName] = React.useState()\r\n    const [Conditions,setConditions]= React.useState()\r\n    const [Code,setCode]= React.useState(null)\r\n    const [Discount,setDiscount]= React.useState('')\r\n    const [Price,setPrice]= React.useState('')\r\n    const [OpeningTime,setOpeningTime]= React.useState('10:00 AM-12:00 AM,10:00 AM-12:00 AM,10:00 AM-12:00 AM')\r\n    const [OpeningDays,setOpeningDays]= React.useState('SATURDAY,SUNDAY,MONDAY')\r\n    const [For,setFor]= React.useState()\r\n    const [image,setImage]= React.useState()\r\n    const [Brands,setBrands]= React.useState()\r\n    const [Error,setError]= React.useState()\r\n    const [Type,setType]= React.useState()\r\n    const [popularity,setpopularity]= React.useState(0)\r\n    const brands=useSelector(state => state.brands)\r\n    const auth = getAuth(app)\r\n    const [Valid,setValid]= React.useState()\r\n    const [PromoCode,setPromoCode]= React.useState(true)\r\n    const [ImageSize,setImageSize]= React.useState(false)\r\n    const [Description, setDescription]= React.useState()\r\n\r\n    const imageSize=async(height,width,file)=>{\r\n      var url = URL.createObjectURL(file[0]);\r\n      var img = new Image;\r\n      \r\n      img.onload = function() {\r\n        if(img.width==width && img.height==height){\r\n          console.log(\"correct\")\r\n          setImageSize(true);\r\n          return true;\r\n        }else{\r\n          setImageSize(false);\r\n          URL.revokeObjectURL(img.src);\r\n          return false;\r\n        }\r\n      }\r\n      img.src = url;\r\n    }\r\n\r\n    const saveDeals = () => {\r\n      \r\n      if(!Name || !Conditions || !OpeningTime || !OpeningDays || !For || !Brands || !Valid){\r\n        setError('Fields can not be empty')\r\n        return\r\n      }\r\n     // if(!ImageSize){\r\n      //  setError('You can only add 1320*500 size image')\r\n      //  return\r\n    //  }\r\n      //console.log(Brands)\r\n      //console.log(Name+','+Brands[0].id+','+writeDate(new Date())+','+'0'+','+Brands[0].name+','+Discount+','+Code+','+Conditions+','+Price+','+OpeningTime+','+OpeningDays+','+For+','+Type)\r\n      setError('Please wait...')\r\n      postData(url + '/setData',{\r\n        auth:auth.currentUser,\r\n        tableName: 'deals',\r\n        columns: [`name`, `brand_id`, `image`, `date`, `popularity`, `brand`, `discount`, `code`, `conditions`, `price`, `time`, `days`, `type`,`forr`,`till`,`description`],\r\n        values: [Name,Brands[0].id,\"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.dreamstime.com%2Fphotos-images%2Fpizza.html&psig=AOvVaw3Gf0VulOmM9_pZijRT1dXT&ust=1653378505707000&source=images&cd=vfe&ved=0CAkQjRxqFwoTCKiIlYeR9fcCFQAAAAAdAAAAABAD\",writeDate(new Date()),popularity,Brands[0].name,Discount?Discount:'',Code,Conditions,Price?Price:'',OpeningTime.replace(/&nbsp;/g, ','),OpeningDays.replace(/&nbsp;/g, ','),\"Pizza\",For,Valid,Description?Description:'']\r\n      }).then(result=>{\r\n        if(result.insertId){\r\n          //alert('Successfully Update data')\r\n     // window.location.reload()\r\n      setError('Files are saved. You can reload the page now.')\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      },200)\r\n      return\r\n        }\r\n  console.log(result)\r\n      })\r\n    return\r\n      const data= new FormData()\r\n      data.append('file',image[0])\r\n      Axios.post(url+'/uploadWithData',data).then(res=>{\r\n        console.log(res.data)\r\n        if(res.data.url){\r\n          postData(url + '/setData',{\r\n            auth:auth.currentUser,\r\n            tableName: 'deals',\r\n            columns: [`name`, `brand_id`, `image`, `date`, `popularity`, `brand`, `discount`, `code`, `conditions`, `price`, `time`, `days`, `type`,`forr`,`till`],\r\n            values: [Name.replace(/[^\\w\\s]/gi, ''),Brands[0].id,res.data.url,writeDate(new Date()),popularity,Brands[0].name,Discount,Code,Conditions.replace(/[^\\w\\s]/gi, ''),Price,OpeningTime.replace(/&nbsp;/g, ','),OpeningDays.replace(/&nbsp;/g, ','),Type.replace(/[^\\w\\s]/gi, ' '),For,Valid]\r\n          }).then(result=>{\r\n            if(result.insertId){\r\n              //alert('Successfully Update data')\r\n         // window.location.reload()\r\n          setError('Files are saved. You can reload the page now.')\r\n          setTimeout(() => {\r\n            window.location.reload()\r\n          },200)\r\n          return\r\n            }\r\n      console.log(result)\r\n          })\r\n        }\r\n      })\r\n     \r\n    }\r\n  \r\n    return (\r\n        <div>\r\n          <div className=\"page-header\">\r\n            <h3 className=\"page-title\"> Add Deals </h3>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Deals</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Add</li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Information</h4>\r\n                  <form className=\"form-sample\">\r\n                    <p className=\"card-description\"> Deals info </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Title</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setName(e.target.value)}  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Valid for</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setFor(e.target.value)} placeholder='who can get it.' type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <div className=\"col-sm-9\" onChange={(e)=>{\r\n                            setPromoCode(!PromoCode)\r\n                          }}>\r\n                          <input value={true} className=\"form-check-input\" type=\"radio\" checked={PromoCode}/>\r\n                          <label style={{\r\n                            marginTop:'3px'\r\n                          }} className=\"form-check-label\">Promo Code</label>\r\n                          <br/>\r\n                          <input value={false} className=\"form-check-input\" type=\"radio\" checked={!PromoCode}/>\r\n                          <label style={{\r\n                            marginTop:'3px'\r\n                          }} className=\"form-check-label\">Request Button</label>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      {\r\n                        PromoCode?(\r\n                          <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Code</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setCode(e.target.value)} placeholder='6 digit code'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                        ):(<></>)\r\n                      }\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Conditions</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setConditions(e.target.value)} placeholder='type all your condition' type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Price (optional)</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setPrice(e.target.value)} placeholder='your price with currency'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">New Price(Optional)</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setDiscount(e.target.value)} placeholder='declare price with currency' type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                        \r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Opening Days</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <CKEditor\r\n                             editor={ ClassicEditor }\r\n                             data=\"<p>SATURDAY,SUNDAY,MONDAY</p>\"\r\n                             onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n\r\n                        setOpeningDays(data.replace(/<\\/?[^>]+(>|$)/g, \"\"))\r\n                        \r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        //console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                       // console.log( 'Focus.', editor );\r\n                    } }\r\n                />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Opening Times</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <CKEditor\r\n                             editor={ ClassicEditor }\r\n                             data=\"<p>10:00 AM-12:00 AM,10:00 AM-12:00 AM,10:00 AM-12:00 AM\"\r\n                             onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n\r\n                        setOpeningTime(data.replace(/<\\/?[^>]+(>|$)/g, \"\"))\r\n                        \r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        //console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                       // console.log( 'Focus.', editor );\r\n                    } }\r\n                />\r\n                          </div>\r\n                        </Form.Group>\r\n                        \r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      {\r\n                        /*\r\n                        <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Type</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setType(e.target.value)} placeholder='eg. pizza..... '  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                        */\r\n                      }\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Valid till</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setValid(e.target.value)} placeholder='type of your deal'  type=\"date\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Description</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <textarea className=\"form-control\" rows=\"4\" placeholder='Description' onChange={(e) => setDescription(e.target.value)} type=\"text\">\r\n                        </textarea>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Select Brand</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select onChange={(e)=>{\r\n                              let data=brands.filter(data => data.id ==e.target.value);\r\n                              setBrands(data);\r\n                            }} className=\"form-control\">\r\n                            <option value=''>Select</option>\r\n                             {\r\n                              brands?(\r\n                                brands.map((doc, i)=>(\r\n                                  <option value={doc.id} key={i}>{doc.name}</option>\r\n                                ))\r\n                              ):(\r\n                                <option>No Brands</option>\r\n                              )\r\n                             }\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      {\r\n                        /*\r\n                        <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Banner Image</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>{\r\n                            setImage(e.target.files)\r\n                            imageSize(500,1320,e.target.files)\r\n                          }} name='file' type=\"file\" />\r\n                          </div>\r\n                        </Form.Group> \r\n                      </div>\r\n                        */\r\n                      }\r\n                    </div>\r\n                    {Error?(\r\n                    <div className=\"alert alert-primary\" role=\"alert\">{Error}</div>\r\n                  ):(\r\n                    <></>\r\n                  )}\r\n                  </form>\r\n                  <button onClick={saveDeals}  className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n};\r\n\r\nexport default Add;"],"names":["React","Date","Name","setName","Conditions","setConditions","Code","setCode","Discount","setDiscount","Price","setPrice","OpeningTime","setOpeningTime","OpeningDays","setOpeningDays","For","setFor","Brands","setBrands","Error","setError","popularity","brands","useSelector","state","auth","getAuth","app","Valid","setValid","PromoCode","setPromoCode","Description","setDescription","className","href","onClick","event","preventDefault","onChange","e","target","value","type","placeholder","checked","style","marginTop","CKEditor","editor","ClassicEditor","data","onReady","console","log","getData","replace","onBlur","onFocus","rows","filter","id","map","doc","i","name","role","postData","url","currentUser","tableName","columns","values","writeDate","then","result","insertId","setTimeout","window","location","reload"],"sourceRoot":""}