{"version":3,"file":"static/js/8887.e1d48372.chunk.js","mappings":"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","sources":["app/hotels/Add.js","../node_modules/bs-custom-file-input/src/selector.js","../node_modules/bs-custom-file-input/src/util.js","../node_modules/bs-custom-file-input/src/eventHandlers.js","../node_modules/bs-custom-file-input/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { postData,url,writeDate } from '../../action';\r\nimport Axios from 'axios'\r\nimport { useSelector } from 'react-redux';\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\n\r\nconst Add = () => {\r\n  const [date, setDate] = React.useState(new Date())\r\n  const [conditions, setConditions] = React.useState([])\r\n  const [Name, setName] = React.useState('')\r\n  const [Address, setAddress] = React.useState('')\r\n  const [Description, setDescription] = React.useState('')\r\n  const [CheckIn, setCheckIn] = React.useState('')\r\n  const [CheckOut, setCheckOut] = React.useState('')\r\n  const [Category, setCategory] = React.useState('villas')\r\n  const [File,setFile]= React.useState(null)\r\n  const [error,setError] = React.useState(null)\r\n  const addresses=useSelector(state => state.addresses)\r\n  const [NearBy1,setNearBy1]= React.useState(null)\r\n  const [Text,setText] = React.useState('')\r\n  const container = React.useRef()\r\n  const [NearBy2,setNearBy2]= React.useState(null)\r\n  const [Location,setLocation]= React.useState(null)\r\n  const [ImageSize,setImageSize]= React.useState(false)\r\n  const [Remember, setRemember]= React.useState()\r\n  const [Phone,setPhone]= React.useState()\r\n  //console.log(addresses)\r\n  const auth = getAuth(app)\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      setError(null)\r\n    },1000)\r\n   \r\n  },[])\r\n\r\n  const imageSize=async(height,width,file)=>{\r\n    var url = URL.createObjectURL(file[0]);\r\n    var img = new Image;\r\n    \r\n    img.onload = function() {\r\n      if(img.width==width && img.height==height){\r\n        console.log(\"correct\")\r\n        setImageSize(true);\r\n        return true;\r\n      }else{\r\n        setImageSize(false);\r\n        URL.revokeObjectURL(img.src);\r\n        return false;\r\n      }\r\n    }\r\n    img.src = url;\r\n  }\r\n  const saveHotel = () => {\r\n    \r\n    if(!ImageSize){\r\n      setError('You can only add 1240*800 size image')\r\n      return\r\n    }\r\n    if(!Name || !Address || !Description || !CheckIn || !CheckOut\r\n       || !File || !NearBy1 || !Location || !conditions ||!Phone){\r\n      \r\n      setError('Please fill all the required fields')\r\n      return\r\n    }\r\n    setError('Please wait...')\r\n    const data= new FormData()\r\n    data.append('file',File[0])\r\n    Axios.post(url+'/uploadWithData',data).then(res=>{\r\n      console.log(res.data)\r\n      if(res.data.url){\r\n        postData(url + '/setData',{\r\n          auth: auth.currentUser,\r\n          tableName: 'hotels',\r\n          columns: ['name','address','location','type','date','popularity','ratings','check_in','check_out','conditions','discount','description','categories','image','near_by','remember','phone'],\r\n          values: [Name.replace(/[^\\w\\s]/gi, ''),Address,Location,'Free for members',writeDate(new Date()),0,0,CheckIn,CheckOut,handleAmenities(conditions),0,Description,Category,res.data.url,NearBy1+(NearBy2?','+NearBy2:''),Remember?Remember:'',Phone]\r\n        }).then(result => {\r\n          console.log(result);\r\n          if (result.insertId){\r\n            setError('Done. You can reload your page now');\r\n            setTimeout(() => {\r\n              window.location.reload()\r\n            },300);\r\n          }\r\n        })\r\n      }\r\n    })\r\n   \r\n  }\r\n const handleAmenities=(arr) => {\r\n  if(Array.isArray(arr)){\r\n    let text=''\r\n    arr.forEach((doc, i)=>{\r\n      text=(text?text+','+doc:doc)\r\n    })\r\n    //console.log(text)\r\n    return text\r\n  }\r\n  return null\r\n }\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\"> Add Hotel </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"#\" onClick={event => event.preventDefault()}>Hotel</a></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Add</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Information</h4>\r\n              <div className=\"form-sample\">\r\n                <p className=\"card-description\"> Give information about it</p>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Name</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='Hotel Name' onChange={(e) => setName(e.target.value)} type=\"text\" />\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Address</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='Hotel Address' onChange={(e) => setAddress(e.target.value)} type=\"text\" />\r\n                        \r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <p>Amenities</p>\r\n                    <Form.Group className=\"row\">\r\n                      <div className=\"col-sm-9\">\r\n                      <div className=\"form-check\">\r\n                       <input onChange={(e)=>{\r\n                        if(e.target.checked){\r\n                          let arr=conditions\r\n                          arr.push(e.target.value)\r\n                          setConditions(arr)\r\n                        }else{\r\n                         \r\n                          let arr=conditions.filter(d=>d!=e.target.value)\r\n                          setConditions(arr)\r\n                        }\r\n                       }} className=\"form-check-input\" type=\"checkbox\" value=\"parking\" id=\"defaultCheck1\"></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                        Parking\r\n                       </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                       <input onChange={(e)=>{\r\n                        if(e.target.checked){\r\n                          let arr=conditions\r\n                          arr.push(e.target.value)\r\n                          setConditions(arr)\r\n                        }else{\r\n                          let arr=conditions.filter(d=>d!=e.target.value)\r\n                          setConditions(arr)\r\n                        }\r\n                       }} className=\"form-check-input\" type=\"checkbox\" value=\"tv\" id=\"defaultCheck1\"></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                        Tv\r\n                       </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                       <input onChange={(e)=>{\r\n                        if(e.target.checked){\r\n                          let arr=conditions\r\n                          arr.push(e.target.value)\r\n                          setConditions(arr)\r\n                        }else{\r\n                          let arr=conditions.filter(d=>d!=e.target.value)\r\n                          setConditions(arr)\r\n                        }\r\n                       }} className=\"form-check-input\" type=\"checkbox\" value=\"wifi\" id=\"defaultCheck1\"></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                        Wifi\r\n                       </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                       <input onChange={(e)=>{\r\n                        if(e.target.checked){\r\n                          let arr=conditions\r\n                          arr.push(e.target.value)\r\n                          setConditions(arr)\r\n                        }else{\r\n                          let arr=conditions.filter(d=>d!=e.target.value)\r\n                          setConditions(arr)\r\n                        }\r\n                       }} className=\"form-check-input\" type=\"checkbox\" value=\"cctv\" id=\"defaultCheck1\"></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                        CCTV\r\n                       </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                       <input onChange={(e)=>{\r\n                        if(e.target.checked){\r\n                          let arr=conditions\r\n                          arr.push(e.target.value)\r\n                          setConditions(arr)\r\n                        }else{\r\n                          let arr=conditions.filter(d=>d!=e.target.value)\r\n                          setConditions(arr)\r\n                        }\r\n                       }} className=\"form-check-input\" type=\"checkbox\" value=\"gym\" id=\"defaultCheck1\"></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                        Gym\r\n                       </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                       <input onChange={(e)=>{\r\n                        if(e.target.checked){\r\n                          let arr=conditions\r\n                          arr.push(e.target.value)\r\n                          setConditions(arr)\r\n                        }else{\r\n                          let arr=conditions.filter(d=>d!=e.target.value)\r\n                          setConditions(arr)\r\n                        }\r\n                       }} className=\"form-check-input\" type=\"checkbox\" value=\"swmming\" id=\"defaultCheck1\"></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                        Swimming\r\n                       </label>\r\n                      </div>\r\n\r\n                        {\r\n                          /*\r\n                          <select onChange={(e) => {\r\n                          if (e.target.value) {\r\n                            setConditions(conditions ? conditions + \",\" + e.target.value : e.target.value)\r\n                          }\r\n                        }} className=\"form-control\">\r\n                          <option value='parking'>Parking</option>\r\n                          <option value='tv'>Tv</option>\r\n                          <option value='wifi'>Wifi</option>\r\n                          <option value='cctv'>CCTV</option>\r\n                          <option value='swmming'>Swimming</option>\r\n                          <option value='gym'>gym</option>\r\n                        </select>\r\n                          */\r\n                        }\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Near by places 1</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='eg. 500m away from Sai Baba Mandir' onChange={(e) => {\r\n                          setNearBy1(e.target.value)\r\n                        }} type=\"text\" />\r\n                      </div>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Near by places 2</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='eg. 500m away from Sai Baba Mandir' onChange={(e) => {\r\n                          setNearBy2(e.target.value)\r\n                        }} type=\"text\" />\r\n                      </div>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Map Link</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='google map link' \r\n                        onChange={(e) => setLocation(e.target.value)} type=\"text\" />\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  \r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Check In</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='eg. 12:00 PM- 10AM' onChange={(e) => {\r\n                          let arr=e.target.value.split(':')\r\n                          let text=''\r\n                          if(parseInt(arr[0])>12) {\r\n                            text = parseInt(arr[0])-12+':'+arr[1]+' PM'\r\n                          }else if(parseInt(arr[0])==12) {\r\n                            text = 12+':'+arr[1]+' PM'\r\n                          }else if(parseInt(arr[0])==0){\r\n                            text = 12+':'+arr[1]+' AM'\r\n                          }\r\n                          else{\r\n                            text = arr[0]+':'+arr[1]+' AM'\r\n                          }\r\n                          setCheckIn(text)\r\n                        }} type=\"time\" />\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Category</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <select onChange={(e) => setCategory(e.target.value)} className=\"form-control\">\r\n                          <option value='villas'>Villas</option>\r\n                          <option value='farm-house'>Farm House</option>\r\n                          <option value='deluxe'>Deluxe</option>\r\n                        </select>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Check Out</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='eg. 12:00 PM- 10AM' onChange={(e) => {\r\n                          let arr=e.target.value.split(':')\r\n                          let text=''\r\n                          if(parseInt(arr[0])>12) {\r\n                            text = parseInt(arr[0])-12+':'+arr[1]+' PM'\r\n                          }else if(parseInt(arr[0])==12) {\r\n                            text = 12+':'+arr[1]+' PM'\r\n                          }else if(parseInt(arr[0])==0){\r\n                            text = 12+':'+arr[1]+' AM'\r\n                          }\r\n                          else{\r\n                            text = arr[0]+':'+arr[1]+' AM'\r\n                          }\r\n                          setCheckOut(text)\r\n                        }} type=\"time\" />\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Thumbnail Image (1240*800)</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <Form.Control name='file' onChange={(e) => {\r\n                          setFile(e.target.files)\r\n                          console.log(imageSize(800,1240,e.target.files))\r\n                          }} type=\"file\" />\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Description</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <textarea className=\"form-control\" rows=\"4\" placeholder='Description' onChange={(e) => setDescription(e.target.value)} type=\"text\">\r\n                        </textarea>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Things to remember</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <textarea className=\"form-control\" rows=\"4\" placeholder='Things to remember' onChange={(e) => setRemember(e.target.value)} type=\"text\">\r\n                        </textarea>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Contact Number</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <input className=\"form-control\" placeholder='Contact number' onChange={(e) => setPhone(e.target.value)} type=\"text\">\r\n                        </input>\r\n                      </div>\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <button onClick={saveHotel} className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                  {error?(\r\n                    <div className=\"alert alert-primary\" role=\"alert\">{error}</div>\r\n                  ):(\r\n                    <></>\r\n                  )}\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Add;","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"names":["React","Date","conditions","setConditions","Name","setName","Address","setAddress","Description","setDescription","CheckIn","setCheckIn","CheckOut","setCheckOut","Category","setCategory","File","setFile","error","setError","useSelector","state","addresses","NearBy1","setNearBy1","NearBy2","setNearBy2","Location","setLocation","ImageSize","setImageSize","Remember","setRemember","Phone","setPhone","auth","getAuth","app","setTimeout","imageSize","height","width","file","url","URL","createObjectURL","img","Image","onload","console","log","revokeObjectURL","src","handleAmenities","arr","Array","isArray","text","forEach","doc","i","className","href","onClick","event","preventDefault","placeholder","onChange","e","target","value","type","checked","push","filter","d","id","htmlFor","split","parseInt","name","files","rows","data","FormData","append","Axios","then","res","postData","currentUser","tableName","columns","values","replace","writeDate","result","insertId","window","location","reload","role","Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","length","slice","call","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","map","join","indexOf","splittedValue","handleInputChange","this","inputValue","handleFormReset","customFileList","querySelectorAll","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener"],"sourceRoot":""}