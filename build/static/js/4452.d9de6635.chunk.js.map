{"version":3,"file":"static/js/4452.d9de6635.chunk.js","mappings":"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","sources":["app/customer/Enquiry.js"],"sourcesContent":["import React from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport { Dropdown, ButtonGroup, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { postData, url, setHotelBooking, convertDate, writeDate,setBookAppointment } from '../../action';\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\n\r\nconst Enquiry = () => {\r\n    const [Checked, setChecked] = React.useState('Hotels')\r\n    const hotelBooking = useSelector(state => state.hotelBooking)\r\n    const userInfo = useSelector(state => state.userInfo)\r\n    const hotels = useSelector(state => state.hotels)\r\n    const deals = useSelector(state => state.deals)\r\n    const bookAppointment= useSelector(state => state.bookAppointment)\r\n    const [data, setData] = React.useState(null)\r\n    const [data2, setData2] = React.useState()\r\n    const dispatch = useDispatch()\r\n    const auth = getAuth(app)\r\n    const [action, setAction] = React.useState(false)\r\n    const brands= useSelector(state => state.brands)\r\n    const [Page,setPage]= React.useState(1)\r\n    const [TotalPage,setTotalPage]= React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'booking_enquiry',\r\n            orderColumn: 'date'\r\n        }).then(data => {\r\n            if (Array.isArray(data)) {\r\n                setData2(data)\r\n            }else{\r\n                console.log(data.message)\r\n            }\r\n\r\n        })\r\n    },[])\r\n\r\n    React.useEffect(() => {\r\n        if (data2) {\r\n            let arr = []\r\n            data2.forEach((doc,i) => {\r\n                if(i<(Page*10) && i>=((Page*10)-10)){\r\n                \r\n                arr.push(doc)\r\n                }\r\n            })\r\n            setData(arr)\r\n            let number=(data2.length/10)\r\n            let floatNumber=parseInt(number)\r\n            let numPage=[]\r\n           for(let i=0; i<floatNumber; i++) {\r\n              numPage.push(floatNumber)\r\n            }\r\n      \r\n          if(number>floatNumber){\r\n          numPage.push(floatNumber)\r\n          setTotalPage(numPage)\r\n           }else{\r\n          setTotalPage(numPage)\r\n           }\r\n        } \r\n        \r\n    }, [Page+data2])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-header\">\r\n                <h3 className=\"page-title\"> All Enquiry </h3>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><a href=\"#\" onClick={event => event.preventDefault()}>Customers</a></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Enquiry</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th> Name </th>\r\n                                            <th> Phone </th>\r\n                                            <th> Hotel Name </th>\r\n                                            <th>Room</th>\r\n                                            <th>Children</th>\r\n                                            <th>Adults</th>\r\n                                            <th>Check In</th>\r\n                                            <th>Check Out</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            data?(\r\n                                                data.map((doc, i) => (\r\n                                                    <List key={i} data={doc}\r\n                                                         />\r\n                                                ))\r\n                                            ):(\r\n                                                <tr>\r\n                                                    <td>Loading..</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                { TotalPage.length>1?(\r\n                    <nav style={{\r\n                        width: '100%',\r\n                        overflow: 'scroll'\r\n                    }} areaLabel=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page>1){\r\n                        setPage(Page-1)\r\n                    }\r\n                }} className=\"page-link\">Previous</button></li>\r\n                {\r\n                    TotalPage.map((doc, i) => (\r\n                      <li key={i} className={Page==(i+1)?\"page-item active\":\"page-item\"}><button onClick={()=>{\r\n                          setPage(i+1)\r\n                      }} className=\"page-link\">{i+1}</button></li>\r\n                     ))\r\n                }\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page<TotalPage.length){\r\n                        setPage(Page+1);\r\n                    }\r\n                }} className=\"page-link\">Next</button></li>\r\n                </ul>\r\n               </nav>\r\n                ):(\r\n                    <></>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Enquiry;\r\nconst List = (props) => {\r\n    const doc = props.data\r\n    const user= useSelector(state => state.userInfo)\r\n    const hotels = useSelector(state => state.hotels)\r\n    return (\r\n        <tr>\r\n            <td> {user?user.filter(h => h.uid ==doc.uid)[0].name:''} </td>\r\n            <td> {user?user.filter(h => h.uid ==doc.uid)[0].phone:''} </td>\r\n            <td>\r\n                {hotels?hotels.filter(d=>d.id==doc.hotel_id)[0].name:''}\r\n            </td>\r\n            <td>{doc.room}</td>\r\n            <td>{doc.children}</td>\r\n            <td>{doc.adults}</td>\r\n            <td> {convertDate(doc.check_in)} </td>\r\n            <td> {convertDate(doc.check_out)} </td>\r\n           \r\n        </tr>\r\n    )\r\n}\r\n"],"names":["React","useSelector","state","hotelBooking","userInfo","hotels","deals","bookAppointment","data","setData","data2","setData2","useDispatch","getAuth","app","brands","Page","setPage","TotalPage","setTotalPage","postData","url","tableName","orderColumn","then","Array","isArray","console","log","message","arr","forEach","doc","i","push","number","length","floatNumber","parseInt","numPage","className","href","onClick","event","preventDefault","map","List","style","width","overflow","areaLabel","props","user","filter","h","uid","name","phone","d","id","hotel_id","room","children","adults","convertDate","check_in","check_out"],"sourceRoot":""}