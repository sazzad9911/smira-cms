{"version":3,"file":"static/js/9330.f67f0675.chunk.js","mappings":"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","sources":["app/customer/PopularRestaurant.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios'\r\nimport {postData, url,writeDate,postAttachment,convertDate} from '../../action'\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\n\r\nconst PopularRestaurant = () => {\r\n    const [Name, setName]= React.useState()\r\n    const [Details,setDetails]= React.useState()\r\n    const [Files,setFiles]= React.useState()\r\n    const [Type,setType]= React.useState()\r\n    const [Error,setError]= React.useState()\r\n    const [Action,setAction]= React.useState(false)\r\n    const [Data, setData]= React.useState(null)\r\n    const auth = getAuth(app)\r\n    const [Category,setCategory]= React.useState()\r\n    const [ImageSize,setImageSize]= React.useState(false)\r\n    const brands=useSelector(state => state.brands)\r\n    const [Options,setOptions]=React.useState()\r\n    const [selected, setSelected] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n      if(brands){\r\n        let arr=[]\r\n        brands.forEach((doc, i)=>{\r\n          arr.push({ label: doc.name, value: doc.id })\r\n        })\r\n        setOptions(arr)\r\n      }\r\n    },[brands])\r\n    React.useEffect(() => {\r\n      postData(url + '/getData',{\r\n        tableName: 'restaurant', \r\n    }).then(data=>{\r\n        if(Array.isArray(data)){\r\n            setData(data)\r\n        }\r\n    })\r\n    },[Action])\r\n    const deleteData = (id) => {\r\n        postData(url + '/deleteData', {\r\n            tableName: 'restaurant',\r\n            condition:'id='+id,\r\n        }).then(data => {\r\n            console.log(data)\r\n            setAction(!Action)\r\n        })\r\n    }\r\n    const imageSize=async(height,width,file)=>{\r\n        var url = URL.createObjectURL(file[0]);\r\n        var img = new Image;\r\n        \r\n        img.onload = function() {\r\n          if(img.width==width && img.height==height){\r\n            console.log(\"correct\")\r\n            setImageSize(true);\r\n            return true;\r\n          }else{\r\n            setImageSize(false);\r\n            URL.revokeObjectURL(img.src);\r\n            return false;\r\n          }\r\n        }\r\n        img.src = url;\r\n      }\r\n    const save=()=>{\r\n        if(!ImageSize){\r\n            setError(\"You can only add 1300*800 size image\")\r\n            return;\r\n        }\r\n        if(!Files || !selected){\r\n            setError(\"Image and Brand field are can not be empty\")\r\n            return;\r\n        }\r\n        if(!Name){\r\n          setError(\"Banner should have a title\")\r\n          return\r\n        }\r\n         //add those line\r\n         const array=JSON.parse(JSON.stringify(selected))\r\n         let text=null;\r\n         array.forEach(doc=>{\r\n           if(text){\r\n             text=text+','+doc.value\r\n           }else{\r\n             text=doc.value\r\n           }\r\n         })\r\n         //\r\n        const data=new FormData()\r\n        data.append('file', Files[0])\r\n        Axios.post(url+'/uploadWithData',data).then(res=>{\r\n          if(res.data.url){\r\n            postData(url + '/setData',{\r\n              auth: auth.currentUser,\r\n              tableName: 'restaurant',\r\n              columns: ['name','image','details','brands'],\r\n              values: [Name,res.data.url,Details,text]\r\n            }).then(result => {\r\n              console.log(result);\r\n              if(result.insertId){\r\n                setError('Image Saved.')\r\n                setAction(!Action)\r\n              }else{\r\n                setError(result.message)\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    return (\r\n        <div>\r\n        <div className=\"page-header\">\r\n          <h3 className=\"page-title\"> PopularRestaurants </h3>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>All</a></li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Restaurants</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>\r\n                <form className=\"form-sample\">\r\n                  <p className=\"card-description\"> Add restaurant banner for single brand </p>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Title</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='title of the banner' onChange={(e)=>setName(e.target.value)}  type=\"text\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Details</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>setDetails(e.target.value)} placeholder='optional' type=\"text\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Select Brands</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <div style={{display:'flex',flexWrap:'wrap'}}>{JSON.parse(JSON.stringify(selected)).map((doc,i)=>(\r\n                          <p style={{margin:'5px'}} key={i}>{doc.label}</p>\r\n                        ))}</div>\r\n                            {\r\n                              Options&&Options.length>0?(\r\n                                <MultiSelect\r\n                              options={Options}\r\n                             value={selected}\r\n                              onChange={(val)=>{\r\n                                setSelected(val);\r\n                                \r\n                              }}\r\n                             labelledBy=\"Select\"\r\n                            />\r\n                              ):(<></>)\r\n                            }\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Add Banner Image-1300*800</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>{\r\n                            setFiles(e.target.files)\r\n                            imageSize(800,1300,e.target.files)\r\n                            }}  type=\"file\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                  {Error?(\r\n                  <div className=\"alert alert-primary\" role=\"alert\">{Error}</div>\r\n                ):(\r\n                  <></>\r\n                )}\r\n                \r\n                </form>\r\n                <button onClick={save} className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>\r\n                {/* <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Select Category</label>\r\n                        <div className=\"col-sm-9\">\r\n                          <select onChange={(e) =>{\r\n                            setCategory(e.target.value);\r\n                          }} className=\"form-control\">\r\n                        <option value=''>Select Brand</option>\r\n                          {\r\n                            brands?(\r\n                                brands.map((doc, i)=>(\r\n                                    <option key={i} value={doc.id}>{doc.name}</option>\r\n                                ))\r\n                            ):(\r\n                                <option value=''>No Brands</option>\r\n                            )\r\n                          }\r\n                          </select>\r\n                        </div>\r\n                      </Form.Group> */}\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th> Image </th>\r\n                        <th> Title </th>\r\n                        <th> Action </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        Data?(\r\n                            Data.length>0 ?(\r\n                                Data.map((doc, i) => (\r\n                                <tr key={i}>\r\n                                <td>\r\n                                <img src={doc.image} alt={doc.name} />\r\n                                </td>\r\n                                <td>{doc.name}</td>\r\n                                <td>\r\n                                <button className='btn btn-gradient-danger btn-rounded btn-fw' onClick={()=>{\r\n                                    deleteData(doc.id)\r\n                                }}>\r\n                                Delete\r\n                                </button>\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            ):(\r\n                                <tr><td>No data available</td></tr>\r\n                            )\r\n                        ):(<tr><td>Loading...</td></tr>)\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default PopularRestaurant;"],"names":["React","Name","setName","Details","setDetails","Files","setFiles","Error","setError","Action","setAction","Data","setData","auth","getAuth","app","ImageSize","setImageSize","brands","useSelector","state","Options","setOptions","selected","setSelected","arr","forEach","doc","i","push","label","name","value","id","postData","url","tableName","then","data","Array","isArray","imageSize","height","width","file","URL","createObjectURL","img","Image","onload","console","log","revokeObjectURL","src","className","href","onClick","event","preventDefault","placeholder","onChange","e","target","type","style","display","flexWrap","JSON","parse","stringify","map","margin","length","options","val","labelledBy","files","role","array","text","FormData","append","Axios","res","currentUser","columns","values","result","insertId","message","image","alt","condition"],"sourceRoot":""}