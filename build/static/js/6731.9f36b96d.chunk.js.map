{"version":3,"file":"static/js/6731.9f36b96d.chunk.js","mappings":"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","sources":["app/customer/Notificaltion.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { postData, url } from '../../action';\r\nimport app from '../../firebase';\r\nimport { getAuth } from 'firebase/auth';\r\nimport {useSelector} from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\n\r\n\r\nconst Notificaltion = () => {\r\n  const [Data, setData] = React.useState(null)\r\n  const [Action, setAction] = React.useState(false)\r\n  const banner=useSelector(state => state.banner)\r\n  const auth=getAuth(app)\r\n  const [Error, setError]= React.useState()\r\n  const [Banner,setBanner]=React.useState()\r\n  const [Index, setIndex]= React.useState()\r\n  const [Files, setFiles]= React.useState()\r\n  const [Type, setType]= React.useState()\r\n  const [Details, setDetails]= React.useState()\r\n  const [Name, setName]= React.useState()\r\n  const brands=useSelector(state => state.brands)\r\n  const [ImageSize,setImageSize]= React.useState(false)\r\n  const [User, setUser]= React.useState()\r\n  const [Options,setOptions]=React.useState()\r\n  const [selected, setSelected] = React.useState([]);\r\n  \r\n  React.useEffect(() => {\r\n    postData(url + '/getData', {\r\n      tableName: 'user',\r\n    }).then(data => {\r\n      if (Array.isArray(data)) {\r\n        let arr=[]\r\n        let count=0;\r\n        data.forEach((doc, i)=>{\r\n          if(doc.token && count<500){\r\n            arr.push({ label: doc.name, value: doc.uid })\r\n            count++;\r\n          }\r\n        })\r\n        setOptions(arr)\r\n        return setData(data)\r\n      }\r\n      console.log(data.message)\r\n    })\r\n  }, [])\r\n \r\n  const save = () => {\r\n    setError('')\r\n    const array=JSON.parse(JSON.stringify(selected))\r\n    if(!Name || !Details || array.length==0){\r\n        setError('Please fill all the required fields')\r\n        return\r\n    }\r\n    let newArr=[]\r\n    array.forEach((doc,i) => {\r\n      newArr.push(doc.value)\r\n    })\r\n    \r\n    postData(url+'/sendMessages',{\r\n        title:Name,\r\n        body:Details,\r\n        uid:newArr\r\n      }).then(result => {\r\n        console.log(result);\r\n        if(result.success) {\r\n          setError('Message has send')\r\n          setAction(!Action)\r\n        }else{\r\n          setError(result.message)\r\n        }\r\n      }).catch(error => {\r\n        console.log(error.message);\r\n      })\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\"> Send Message </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Message</a></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Send</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"row\">\r\n                  <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n          <div className=\"col-12 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>\r\n                <form className=\"form-sample\">\r\n                  <p className=\"card-description\"> Send notification to single user </p>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Title*</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='title of the banner' onChange={(e)=>setName(e.target.value)}  type=\"text\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Body*</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>setDetails(e.target.value)} placeholder='optional' type=\"text\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Select Users</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <div style={{display:'flex',flexWrap:'wrap'}}>{JSON.parse(JSON.stringify(selected)).map((doc,i)=>(\r\n                          <p style={{margin:'5px'}} key={i}>{doc.label}</p>\r\n                        ))}</div>\r\n                            {\r\n                              Options&&Options.length>0?(\r\n                                <MultiSelect\r\n                              options={Options}\r\n                             value={selected}\r\n                              onChange={(val)=>{\r\n                                setSelected(val);\r\n                                \r\n                              }}\r\n                             labelledBy=\"Select\"\r\n                            />\r\n                              ):(<>Loading..</>)\r\n                            }\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  {Error?(\r\n                  <div className=\"alert alert-primary\" role=\"alert\">{Error}</div>\r\n                ):(\r\n                  <></>\r\n                )}\r\n                \r\n                </form>\r\n                <button onClick={save} className='btn btn-gradient-secondary btn-rounded btn-fw'>SEND</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Notificaltion;"],"names":["React","setData","Action","setAction","useSelector","state","banner","getAuth","app","Error","setError","Details","setDetails","Name","setName","brands","Options","setOptions","selected","setSelected","postData","url","tableName","then","data","Array","isArray","arr","count","forEach","doc","i","token","push","label","name","value","uid","console","log","message","className","href","onClick","event","preventDefault","placeholder","onChange","e","target","type","style","display","flexWrap","JSON","parse","stringify","map","margin","length","options","val","labelledBy","role","array","newArr","title","body","result","success","catch","error"],"sourceRoot":""}