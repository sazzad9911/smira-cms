{"version":3,"file":"static/js/8065.6e47629c.chunk.js","mappings":"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","sources":["app/dashboard/Dashboard.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport DatePicker from \"react-datepicker\";\nimport { Link, useHistory } from 'react-router-dom';\nimport circle from '../../assets/images/dashboard/circle.png'\nimport { connect } from 'react-redux'\nimport app from '../../firebase';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\n\n\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport { convertDate } from './../../action';\nclass Dashboard extends Component {\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n  constructor(props) {\n    super(props)\n    this.state = {\n      startDate: new Date(),\n      visitSaleData: {},\n      visitSaleOptions: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              display: false,\n              min: 0,\n              stepSize: 20,\n              max: 80\n            },\n            gridLines: {\n              drawBorder: false,\n              color: 'rgba(235,237,242,1)',\n              zeroLineColor: 'rgba(235,237,242,1)'\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              display: false,\n              drawBorder: false,\n              color: 'rgba(0,0,0,1)',\n              zeroLineColor: 'rgba(235,237,242,1)'\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9c9fa6\",\n              autoSkip: true,\n            },\n            categoryPercentage: 0.5,\n            barPercentage: 0.5\n          }]\n        },\n        legend: {\n          display: false,\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        }\n      },\n      trafficData: {},\n      trafficOptions: {\n        responsive: true,\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        legend: false,\n      },\n      todos: [\n        {\n          id: 1,\n          task: 'Add new Task',\n          isCompleted: false\n        },\n\n      ],\n      inputValue: '',\n      goldMembership: null,\n      silverMembership: null,\n      diamondMembership: null,\n      platinumMembership: null,\n      data: [],\n      hotels: [],\n      deals: [],\n    }\n    this.statusChangedHandler = this.statusChangedHandler.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    let auth = getAuth(app);\n    onAuthStateChanged(auth, user => {\n      if (!user) {\n        window.location.href = '/user-pages/login-1'\n      }\n    })\n  }\n  statusChangedHandler(event, id) {\n\n    //const todoIndex = this.state.todos.findIndex( t => t.id === id );\n    const todo = { ...this.state.todos[id] };\n    todo.isCompleted = event.target.checked;\n\n    const todos = [...this.state.todos];\n    todos[id] = todo;\n\n    this.setState({\n      todos: todos\n    })\n  }\n\n  addTodo(event) {\n    event.preventDefault();\n\n    const todos = [...this.state.todos];\n    todos.unshift({\n      id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n      task: this.state.inputValue,\n      isCompleted: false\n\n    })\n\n    this.setState({\n      todos: todos,\n      inputValue: ''\n    })\n  }\n\n  removeTodo(index) {\n    const todos = [...this.state.todos];\n    todos.splice(index, 1);\n\n    this.setState({\n      todos: todos\n    })\n  }\n\n  inputChangeHandler(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    //your code\n    //console.log(this.props.userInfo)\n    if (this.props.userInfo) {\n      let gold = this.props.userInfo.filter(e => e.membership_type == 'gold')\n      let goldCount = (gold.length * 100) / this.props.userInfo.length\n      this.setState({ goldMembership: gold });\n      let platinum = this.props.userInfo.filter(e => e.membership_type == 'platinum')\n      let platinumCount = (platinum.length * 100) / this.props.userInfo.length\n      this.setState({ platinumMembership: platinum });\n      let silver = this.props.userInfo.filter(e => e.membership_type == 'silver')\n      let silverCount = (silver.length * 100) / this.props.userInfo.length\n      this.setState({ silverMembership: silver });\n      let diamond = this.props.userInfo.filter(e => e.membership_type == 'diamond')\n      let diamondCount = (diamond.length * 100) / this.props.userInfo.length\n      this.setState({ diamondMembership: diamond })\n      this.setState({ data: this.state.data.push(goldCount, silverCount, platinumCount, diamondCount) })\n    }\n    if(this.props.bookAppointment && this.props.hotelBooking){\n\n      for(var i=0;i<12;i++){\n        let data=this.props.bookAppointment.filter(e=>new Date(e.date).getMonth()==i)\n        this.setState({deals: this.state.deals.push(data.length)}) \n        let newData=this.props.hotelBooking.filter(e =>new Date(e.date).getMonth()==i)\n        this.setState({hotels: this.state.hotels.push(newData.length)}) \n        \n      }\n    \n    }\n\n\n    //console.log(this.state.data)\n    var ctx = document.getElementById('visitSaleChart').getContext(\"2d\")\n    var gradientBar1 = ctx.createLinearGradient(0, 0, 0, 181)\n    gradientBar1.addColorStop(0, '#E20993')\n    gradientBar1.addColorStop(1, '#CF54A2')\n\n    var gradientBar2 = ctx.createLinearGradient(0, 0, 0, 360)\n    gradientBar2.addColorStop(0, 'rgba(54, 215, 232, 1)')\n    gradientBar2.addColorStop(1, 'rgba(177, 148, 250, 1)')\n\n    var gradientBar3 = ctx.createLinearGradient(0, 0, 0, 300)\n    gradientBar3.addColorStop(0, 'rgba(255, 191, 150, 1)')\n    gradientBar3.addColorStop(1, 'rgba(254, 112, 150, 1)')\n\n    var gradientdonut1 = ctx.createLinearGradient(0, 0, 0, 181)\n    gradientdonut1.addColorStop(0, 'rgba(54, 215, 232, 1)')\n    gradientdonut1.addColorStop(1, 'rgba(177, 148, 250, 1)')\n\n    var gradientdonut2 = ctx.createLinearGradient(0, 0, 0, 50)\n    gradientdonut2.addColorStop(0, 'rgba(6, 185, 157, 1)')\n    gradientdonut2.addColorStop(1, 'rgba(132, 217, 210, 1)')\n\n    var gradientdonut3 = ctx.createLinearGradient(0, 0, 0, 300)\n    gradientdonut3.addColorStop(0, 'rgba(254, 124, 150, 1)')\n    gradientdonut3.addColorStop(1, 'rgba(255, 205, 150, 1)')\n\n    var gradientdonut4 = ctx.createLinearGradient(0, 0, 0, 300)\n    gradientdonut4.addColorStop(0, '#E59866')\n    gradientdonut4.addColorStop(1, '#F8C471')\n\n\n\n    const newVisitSaleData = {\n      labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n      datasets: [\n        {\n          label: \"Hotel\",\n          borderColor: gradientdonut1,\n          backgroundColor: gradientdonut1,\n          hoverBackgroundColor: gradientdonut1,\n          legendColor: gradientdonut1,\n          pointRadius: 0,\n          fill: false,\n          borderWidth: 1,\n          data: this.state.hotels\n        },\n        {\n          label: \"Deal\",\n          borderColor: gradientBar1,\n          backgroundColor: gradientBar1,\n          hoverBackgroundColor: gradientBar1,\n          legendColor: gradientBar1,\n          pointRadius: 0,\n          fill: false,\n          borderWidth: 1,\n          data: this.state.deals\n        },\n      ]\n    }\n    const newTrafficData = {\n      datasets: [{\n        data: this.state.data,\n        backgroundColor: [\n          gradientdonut1,\n          gradientdonut2,\n          gradientdonut3,\n          gradientdonut4\n        ],\n        hoverBackgroundColor: [\n          gradientdonut1,\n          gradientdonut2,\n          gradientdonut3,\n          gradientdonut4\n        ],\n        borderColor: [\n          gradientdonut1,\n          gradientdonut2,\n          gradientdonut3,\n          gradientdonut4\n        ],\n        legendColor: [\n          gradientdonut1,\n          gradientdonut2,\n          gradientdonut3,\n          gradientdonut4\n        ]\n      }],\n\n      // These labels appear in the legend and in the tooltips when hovering different arcs\n      labels: [\n        'Gold Membership',\n        'Platinum Membership',\n        'Silver Membership',\n        'Diamond Membership',\n      ]\n    };\n    this.setState({ visitSaleData: newVisitSaleData, trafficData: newTrafficData })\n\n  }\n\n\n\n  toggleProBanner() {\n    document.querySelector('.proBanner').classList.toggle(\"hide\");\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">\n            <span className=\"page-title-icon bg-gradient-primary text-white mr-2\">\n              <i className=\"mdi mdi-home\"></i>\n            </span> Dashboard </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ul className=\"breadcrumb\">\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                <span></span>Overview <i className=\"mdi mdi-alert-circle-outline icon-sm text-primary align-middle\"></i>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card bg-gradient-danger card-img-holder text-white\">\n              <div className=\"card-body\">\n\n                <h4 className=\"font-weight-normal mb-3\">Total Users <i className=\"mdi mdi-account mdi-24px float-right\"></i>\n                </h4>\n                <h2 className=\"mb-5\">{this.props.userInfo ? this.props.userInfo.length : 0}</h2>\n                <h6 className=\"card-text\">From 12 May 2022</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card bg-gradient-info card-img-holder text-white\">\n              <div className=\"card-body\">\n                <img src={circle} className=\"card-img-absolute\" alt=\"circle\" />\n                <h4 className=\"font-weight-normal mb-3\">Total Hotels <i className=\"mdi mdi-hotel mdi-24px float-right\"></i>\n                </h4>\n                <h2 className=\"mb-5\">{this.props.hotels ? this.props.hotels.length : 0}</h2>\n                <h6 className=\"card-text\">From 12 May 2022</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card bg-gradient-success card-img-holder text-white\">\n              <div className=\"card-body\">\n\n                <h4 className=\"font-weight-normal mb-3\">Total Deals <i className=\"mdi mdi-nutrition mdi-24px float-right\"></i>\n                </h4>\n                <h2 className=\"mb-5\">{this.props.deals ? this.props.deals.length : 0}</h2>\n                <h6 className=\"card-text\">From 12 May 2022</h6>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-7 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"clearfix mb-4\">\n                  <h4 className=\"card-title float-left\">Visit And Sales Statistics</h4>\n                  <div id=\"visit-sale-chart-legend\" className=\"rounded-legend legend-horizontal legend-top-right float-right\">\n                    <ul>\n                      <li>\n                        <span className=\"legend-dots bg-primary\">\n                        </span>Hotel\n                      </li>\n                      <li>\n                        <span className=\"legend-dots bg-danger\">\n                        </span>Deal\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <Bar ref='chart' className=\"chartLegendContainer\" data={this.state.visitSaleData} options={this.state.visitSaleOptions} id=\"visitSaleChart\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-5 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Membership Plans</h4>\n                <Doughnut data={this.state.trafficData} options={this.state.trafficOptions} />\n                <div id=\"traffic-chart-legend\" className=\"rounded-legend legend-vertical legend-bottom-left pt-4\">\n                  <ul>\n                    <li>\n                      <span className=\"legend-dots bg-info\"></span>Gold Membership\n                      <span className=\"float-right\">{this.state.goldMembership ? ((this.state.goldMembership.length * 100) / this.props.userInfo.length).toFixed(1) : 0}%</span>\n                    </li>\n                    <li>\n                      <span className=\"legend-dots bg-success\"></span>Silver Membership\n                      <span className=\"float-right\">{this.state.silverMembership ? ((this.state.silverMembership.length * 100) / this.props.userInfo.length).toFixed(1) : 0}%</span>\n                    </li>\n                    <li>\n                      <span className=\"legend-dots bg-danger\"></span>Platinum Membership\n                      <span className=\"float-right\">{this.state.platinumMembership ? ((this.state.platinumMembership.length * 100) / this.props.userInfo.length).toFixed(1) : 0}%</span>\n                    </li>\n                    <li>\n                      <span style={{ backgroundColor: '#E59866' }} className=\"legend-dots bg-danger\"></span>Diamond Membership\n                      <span className=\"float-right\">{this.state.diamondMembership ? ((this.state.diamondMembership.length * 100) / this.props.userInfo.length).toFixed(1) : 0}%</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* <div className=\"row\">\n          <div className=\"col-lg-5 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body p-0 d-flex\">\n                <div className=\"dashboard-custom-date-picker\">\n                  <DatePicker inline selected={this.state.startDate} onChange={this.handleChange} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-7 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title text-white\">Todo</h4>\n                <form className=\"add-items d-flex\" onSubmit={this.addTodo}>\n                  <input\n                    type=\"text\"\n                    className=\"form-control h-auto\"\n                    placeholder=\"What do you need to do today?\"\n                    value={this.state.inputValue}\n                    onChange={this.inputChangeHandler}\n                    required />\n                  <button type=\"submit\" className=\"btn btn-gradient-primary font-weight-bold px-lg-4 px-3\">Add</button>\n                </form>\n                <div className=\"list-wrapper\">\n                  <ul className=\"d-flex flex-column todo-list\">\n                    {this.state.todos.map((todo, index) => {\n                      return <ListItem\n                        isCompleted={todo.isCompleted}\n                        changed={(event) => this.statusChangedHandler(event, index)}\n                        key={todo.id}\n                        remove={() => this.removeTodo(index)}\n                      >{todo.task}</ListItem>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\nconst ListItem = (props) => {\n\n  return (\n    <li className={(props.isCompleted ? 'completed' : null)}>\n      <div className=\"form-check\">\n        <label htmlFor=\"\" className=\"form-check-label\">\n          <input className=\"checkbox\" type=\"checkbox\"\n            checked={props.isCompleted}\n            onChange={props.changed}\n          /> {props.children} <i className=\"input-helper\"></i>\n        </label>\n      </div>\n      <i className=\"remove mdi mdi-close-circle-outline\" onClick={props.remove}></i>\n    </li>\n  )\n};\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    userInfo: state.userInfo,\n    hotels: state.hotels,\n    deals: state.deals,\n    hotelBooking: state.hotelBooking,\n    bookAppointment: state.bookAppointment,\n  }\n}\nexport default connect(mapStateToProps)(Dashboard);"],"names":["Dashboard","props","handleChange","date","setState","startDate","state","Date","visitSaleData","visitSaleOptions","scales","yAxes","ticks","beginAtZero","display","min","stepSize","max","gridLines","drawBorder","color","zeroLineColor","xAxes","padding","fontColor","autoSkip","categoryPercentage","barPercentage","legend","elements","point","radius","trafficData","trafficOptions","responsive","animation","animateScale","animateRotate","todos","id","task","isCompleted","inputValue","goldMembership","silverMembership","diamondMembership","platinumMembership","data","hotels","deals","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","auth","getAuth","app","onAuthStateChanged","user","window","location","href","event","todo","this","target","checked","preventDefault","unshift","length","index","splice","value","userInfo","gold","filter","e","membership_type","goldCount","platinum","platinumCount","silver","silverCount","diamond","diamondCount","push","bookAppointment","hotelBooking","i","getMonth","newData","ctx","document","getElementById","getContext","gradientBar1","createLinearGradient","addColorStop","gradientBar2","gradientBar3","gradientdonut1","gradientdonut2","gradientdonut3","gradientdonut4","newVisitSaleData","labels","datasets","label","borderColor","backgroundColor","hoverBackgroundColor","legendColor","pointRadius","fill","borderWidth","newTrafficData","querySelector","classList","toggle","className","src","alt","ref","options","toFixed","style","Component","connect"],"sourceRoot":""}