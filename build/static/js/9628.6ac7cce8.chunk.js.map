{"version":3,"file":"static/js/9628.6ac7cce8.chunk.js","mappings":"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","sources":["app/brands/TopBrands.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport {useSelector} from 'react-redux'\r\nimport {postData, url} from '../../action'\r\nimport Axios from 'axios'\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\n\r\nconst TopBrands = () => {\r\n    const hotels= useSelector(state => state.hotels)\r\n    const [Error,setError]= React.useState()\r\n    const [Data, setData]= React.useState(null)\r\n    const [Action, setAction]=React.useState(false)\r\n    const [File, setFile]=React.useState(null)\r\n    const [HotelId, setHotelId]=React.useState(null)\r\n    const [Id,setId]=React.useState(null)\r\n    const [Data2, setData2]= React.useState(null)\r\n    const auth=getAuth(app)\r\n    const [ImageSize,setImageSize]= React.useState(false)\r\n    const brands=useSelector(state => state.brands)\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'top_brands',\r\n        }).then(data => {\r\n            if(Array.isArray(data)){\r\n                setData(data)\r\n            }\r\n        })\r\n    },[Action])\r\n    const deleteData = (id) => {\r\n        postData(url + '/deleteData', {\r\n            tableName: 'top_brands',\r\n            condition:'id='+id,\r\n        }).then(data => {\r\n            console.log(data)\r\n            setAction(!Action)\r\n        })\r\n    }\r\n    const uploadImages = () =>{\r\n        if(!HotelId){\r\n            setError('Please select a brand.')\r\n            return\r\n        }\r\n        \r\n        postData(url + '/setData',{\r\n          auth: auth.currentUser,\r\n          tableName: 'top_brands',\r\n          columns: ['brand_id','image'],\r\n          values: [HotelId.id,HotelId.image],\r\n        }).then(result => {\r\n          console.log(result);\r\n          setError('Brand is saved into top brands')\r\n          setAction(!Action)\r\n        }).catch(e=>{\r\n            setError('Problem in saving!')\r\n        })\r\n    }\r\n    \r\n   \r\n    return (\r\n        <div>\r\n          <div className=\"page-header\">\r\n            <h3 className=\"page-title\"> Top Brands List </h3>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><a href=\"#\" onClick={event => event.preventDefault()}>Brands</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">All</li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Information</h4>\r\n                  <form className=\"form-sample\">\r\n                    <p className=\"card-description\"> Brands info </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Select Brand</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select onChange={(e)=>{\r\n                              //setDealId(e.target.value);\r\n                             let data= brands.filter(d=>d.id==e.target.value)[0]\r\n                              setHotelId(data);\r\n                            }} className=\"form-control\">\r\n                            <option value=''>Select</option>\r\n                             {\r\n                              brands?(\r\n                                brands.map((doc, i)=>(\r\n                                  <option value={doc.id} key={i}>{doc.name}</option>\r\n                                ))\r\n                              ):(\r\n                                <option>No Deals</option>\r\n                              )\r\n                             }\r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    {Error?(\r\n                    <div className=\"alert alert-primary\" role=\"alert\">{Error}</div>\r\n                  ):(\r\n                    <></>\r\n                  )}\r\n                  </form>\r\n                  <button onClick={uploadImages} className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th> Image </th>\r\n                        <th> Hotel Name </th>\r\n                        <th> Action </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        Data && brands ?(\r\n                            Data.map((doc, i) => (\r\n                                <tr key={i}>\r\n                                <td>\r\n                                <img src={doc.image} alt={doc.id} />\r\n                                </td>\r\n                                <td>{brands?brands.filter(d=>d.id==doc.brand_id)[0].name:'...'}</td>\r\n                                <td>\r\n                                <button className='btn btn-gradient-danger btn-rounded btn-fw' onClick={()=>{\r\n                                    deleteData(doc.id)\r\n                                }}>\r\n                                Delete\r\n                                </button>\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                        ):(<tr><td>Loading...</td></tr>)\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default TopBrands;"],"names":["useSelector","state","hotels","React","Error","setError","Data","setData","Action","setAction","HotelId","setHotelId","auth","getAuth","app","brands","postData","url","tableName","then","data","Array","isArray","className","href","onClick","event","preventDefault","onChange","e","filter","d","id","target","value","map","doc","i","name","role","currentUser","columns","values","image","result","console","log","catch","src","alt","brand_id","condition"],"sourceRoot":""}