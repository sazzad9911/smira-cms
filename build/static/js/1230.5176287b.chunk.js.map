{"version":3,"file":"static/js/1230.5176287b.chunk.js","mappings":"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","sources":["app/customer/Flash.js","../node_modules/bs-custom-file-input/src/selector.js","../node_modules/bs-custom-file-input/src/util.js","../node_modules/bs-custom-file-input/src/eventHandlers.js","../node_modules/bs-custom-file-input/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios'\r\nimport {postData, url,writeDate,postAttachment,convertDate} from '../../action'\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst Flash = () => {\r\n    const [Files,setFiles]= React.useState()\r\n    const [Type,setType]= React.useState()\r\n    const [Error,setError]= React.useState()\r\n    const [Action,setAction]= React.useState(false)\r\n    const [Data, setData]= React.useState(null)\r\n    const auth = getAuth(app)\r\n    const [Category,setCategory]= React.useState()\r\n    const [ImageSize,setImageSize]= React.useState(false)\r\n    const brands=useSelector(state => state.brands)\r\n    const [Date,setDate]= React.useState()\r\n\r\n    React.useEffect(() => {\r\n        postData(url + '/getData',{\r\n            tableName: 'flash_banner',\r\n        }).then(data=>{\r\n            if(Array.isArray(data)){\r\n                setData(data)\r\n            }\r\n        })\r\n    },[Action])\r\n    const deleteData = (id) => {\r\n        postData(url + '/deleteData', {\r\n            tableName: 'flash_banner',\r\n            condition:'id='+id,\r\n        }).then(data => {\r\n            console.log(data)\r\n            \r\n            setAction(!Action)\r\n        })\r\n    }\r\n    const imageSize=async(height,width,file)=>{\r\n        var url = URL.createObjectURL(file[0]);\r\n        var img = new Image;\r\n        \r\n        img.onload = function() {\r\n          if(img.width==width && img.height==height){\r\n            console.log(\"correct\")\r\n            setImageSize(true);\r\n            return true;\r\n          }else{\r\n            setImageSize(false);\r\n            URL.revokeObjectURL(img.src);\r\n            return false;\r\n          }\r\n        }\r\n        img.src = url;\r\n      }\r\n    const save=()=>{\r\n        if(!ImageSize){\r\n            setError(\"You can only add 700*500 size image\")\r\n            return;\r\n        }\r\n        if(!Date){\r\n          setError(\"Invalid date for validity\")\r\n          return;\r\n        }\r\n        const data=new FormData()\r\n        data.append('file', Files[0])\r\n        Axios.post(url+'/uploadWithData',data).then(res=>{\r\n          if(res.data.url){\r\n            postData(url + '/setData',{\r\n              auth: auth.currentUser,\r\n              tableName: 'flash_banner',\r\n              columns: ['image','validity'],\r\n              values: [res.data.url,Date]\r\n            }).then(result => {\r\n              console.log(result);\r\n              if(result.insertId){\r\n                setError('Image Saved.')\r\n                setAction(!Action)\r\n              }else{\r\n                setError(result.message)\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    return (\r\n        <div>\r\n        <div className=\"page-header\">\r\n          <h3 className=\"page-title\"> Flash Popup </h3>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>All</a></li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Images</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>\r\n                <form className=\"form-sample\">\r\n                  <p className=\"card-description\"> Add image for a single offer </p>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Add Banner Image-500*700</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>{\r\n                            setFiles(e.target.files)\r\n                            imageSize(700,500,e.target.files)\r\n                            }}  type=\"file\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Validity</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>{\r\n                            setDate(e.target.value);\r\n                            console.log(e.target.value)\r\n                            }}  type=\"date\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                  {Error?(\r\n                  <div className=\"alert alert-primary\" role=\"alert\">{Error}</div>\r\n                ):(\r\n                  <></>\r\n                )}\r\n                \r\n                </form>\r\n                <button onClick={save} className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>       \r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th> Number </th>\r\n                        <th> Image </th>\r\n                        <th> Action </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        Data?(\r\n                            Data.length>0 ?(\r\n                                Data.map((doc, i) => (\r\n                                <tr key={i}>\r\n                                <td>\r\n                                <p>{i+1}</p>\r\n                                </td>\r\n                                <img style={{\r\n                                    width: '100px',\r\n                                    height:'100px',\r\n                                    margin: '5px'\r\n                                }} src={doc.image} alt={doc.name} />\r\n                                <td>\r\n                                <button className='btn btn-gradient-danger btn-rounded btn-fw' onClick={()=>{\r\n                                    deleteData(doc.id)\r\n                                }}>\r\n                                Delete\r\n                                </button>\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            ):(\r\n                                <tr><td>No data available</td></tr>\r\n                            )\r\n                        ):(<tr><td>Loading...</td></tr>)\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Flash;","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"names":["React","Files","setFiles","Error","setError","Action","setAction","Data","setData","auth","getAuth","app","ImageSize","setImageSize","useSelector","state","brands","Date","setDate","postData","url","tableName","then","data","Array","isArray","imageSize","height","width","file","URL","createObjectURL","img","Image","onload","console","log","revokeObjectURL","src","className","href","onClick","event","preventDefault","onChange","e","target","files","type","value","role","FormData","append","Axios","res","currentUser","columns","values","result","insertId","message","length","map","doc","i","style","margin","image","alt","name","id","condition","Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","slice","call","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","window","File","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","join","indexOf","splittedValue","split","handleInputChange","this","inputValue","handleFormReset","customFileList","querySelectorAll","filter","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener"],"sourceRoot":""}