{"version":3,"file":"static/js/3210.f881d97e.chunk.js","mappings":"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","sources":["app/customer/Messages.js"],"sourcesContent":["import React from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport { Dropdown, ButtonGroup, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { postData, url, setHotelBooking, convertDate, writeDate,setBookAppointment } from '../../action';\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\n\r\nconst Messages = () => {\r\n    const [Checked, setChecked] = React.useState('Hotels')\r\n    const hotelBooking = useSelector(state => state.hotelBooking)\r\n    const userInfo = useSelector(state => state.userInfo)\r\n    const hotels = useSelector(state => state.hotels)\r\n    const deals = useSelector(state => state.deals)\r\n    const bookAppointment= useSelector(state => state.bookAppointment)\r\n    const [data, setData] = React.useState([])\r\n    const [data2, setData2] = React.useState(null)\r\n    const dispatch = useDispatch()\r\n    const auth = getAuth(app)\r\n    const [action, setAction] = React.useState(false)\r\n    const brands= useSelector(state => state.brands)\r\n    const [Page,setPage]= React.useState(1)\r\n    const [TotalPage,setTotalPage]= React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'customer_messages',\r\n            orderColumn:'date'\r\n        }).then(data => {\r\n            if(Array.isArray(data)){\r\n                setData2(data)\r\n            }\r\n        })\r\n\r\n    },[action])\r\n\r\n    React.useEffect(() => {\r\n        if (data2) {\r\n            let arr = []\r\n            data2.forEach((doc,i) => {\r\n                if(i<(Page*10) && i>=((Page*10)-10)){\r\n                  arr.push(doc)\r\n                }\r\n            })\r\n            setData(arr)\r\n            let number=(data2.length/10)\r\n            let floatNumber=parseInt(number)\r\n            let numPage=[]\r\n           for(let i=0; i<floatNumber; i++) {\r\n              numPage.push(floatNumber)\r\n            }\r\n      \r\n          if(number>floatNumber){\r\n          numPage.push(floatNumber)\r\n          setTotalPage(numPage)\r\n           }else{\r\n          setTotalPage(numPage)\r\n           }\r\n        } \r\n        \r\n    }, [Page+data2])\r\n    const deleteData=(id)=>{\r\n        postData(url + '/deleteData',{\r\n            tableName: 'customer_messages',\r\n            condition:'id='+id\r\n        }).then(response=>{\r\n            setAction(!action)\r\n        })\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <div className=\"page-header\">\r\n                <h3 className=\"page-title\"> All Messages </h3>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><a href=\"#\" onClick={event => event.preventDefault()}>Customer</a></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Messages</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            \r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th> Name </th>\r\n                                            <th> Phone </th>\r\n                                            <th>Messages</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            data.map((doc, i) => (\r\n                                                <List deleteData={deleteData} key={i} data={doc}\r\n                                                  />\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                { TotalPage.length>1?(\r\n                    <nav style={{\r\n                        width: '100%',\r\n                        overflow: 'scroll'\r\n                    }} areaLabel=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page>1){\r\n                        setPage(Page-1)\r\n                    }\r\n                }} className=\"page-link\">Previous</button></li>\r\n                {\r\n                    TotalPage.map((doc, i) => (\r\n                      <li key={i} className={Page==(i+1)?\"page-item active\":\"page-item\"}><button onClick={()=>{\r\n                          setPage(i+1)\r\n                      }} className=\"page-link\">{i+1}</button></li>\r\n                     ))\r\n                }\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page<TotalPage.length){\r\n                        setPage(Page+1);\r\n                    }\r\n                }} className=\"page-link\">Next</button></li>\r\n                </ul>\r\n               </nav>\r\n                ):(\r\n                    <></>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;\r\nconst List = (props) => {\r\n    const doc = props.data\r\n    \r\n    return (\r\n        <tr>\r\n            <td> {doc.name} </td>\r\n            <td> {doc.phone} </td>\r\n            <td>\r\n                {doc.message}\r\n            </td>\r\n            <td>\r\n                <button className='btn btn-gradient-danger btn-rounded btn-fw' \r\n                onClick={() =>props.deleteData(doc.id)}>\r\n                Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n"],"names":["React","useSelector","state","hotelBooking","userInfo","hotels","deals","bookAppointment","data","setData","data2","setData2","useDispatch","getAuth","app","action","setAction","brands","Page","setPage","TotalPage","setTotalPage","postData","url","tableName","orderColumn","then","Array","isArray","arr","forEach","doc","i","push","number","length","floatNumber","parseInt","numPage","deleteData","id","condition","response","className","href","onClick","event","preventDefault","map","List","style","width","overflow","areaLabel","props","name","phone","message"],"sourceRoot":""}