{"version":3,"file":"static/js/8139.9ac2a1ab.chunk.js","mappings":"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","sources":["app/member/MemberAction.js"],"sourcesContent":["import React from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport {postData,url,writeDate,dateDifference,visualDate} from './../../action'\r\nimport { Form } from 'react-bootstrap';\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\n\r\nconst MemberAction = () => {\r\n    const auth= getAuth(app)\r\n    const {uid} =useParams()\r\n    const [Data,setData]=React.useState(null)\r\n    const [error,setError]= React.useState()\r\n    const [Plans,setPlans]=React.useState()\r\n    const [Select,setSelect]=React.useState()\r\n    const [Starting,setStarting]=React.useState()\r\n    const [Ending,setEnding]=React.useState()\r\n    const [membership,setMembership]= React.useState()\r\n    const [newMembership,setNewMembership]=React.useState()\r\n\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'user',\r\n            condition:`uid='${uid}'`\r\n        }).then(data =>{\r\n            if(Array.isArray(data)&& data.length>0){\r\n                if(!data[0].membership_type){\r\n                    setSelect('non')\r\n                }else{\r\n                    setSelect(data[0].membership_type)\r\n                    setStarting(visualDate(data[0].starting_date))\r\n                    setEnding(visualDate(data[0].ending_date))\r\n                }\r\n                return setData(data)\r\n            }\r\n            console.log(data.message)\r\n        })\r\n    },[uid])\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'membership'\r\n        }).then(data => {\r\n            if(Array.isArray(data)&& data.length>0){\r\n              setMembership(data.filter(p=>p.type ==Select)[0])\r\n              setNewMembership(data.filter(p=>p.type ==Select)[0])\r\n               return setPlans(data)\r\n            }\r\n            console.log(data.message)\r\n        })\r\n    })\r\n    function makeid(length) {\r\n      var result           = '';\r\n      var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n      var charactersLength = characters.length;\r\n      for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * \r\n   charactersLength));\r\n     }\r\n     return result;\r\n   }\r\n    const submit=()=>{\r\n        if(!Plans){\r\n            setError(\"Error loading membership plans\")\r\n            return\r\n        }\r\n        if(!Select){\r\n            setError(\"Invalid selection.\")\r\n            return\r\n        }\r\n        if(Select=='non'){\r\n\r\n            postData(url + '/query',{\r\n                query:`UPDATE user SET membership_type=NULL,starting_date=NULL,ending_date=NULL WHERE uid='${uid}'`\r\n            }).then(response => {\r\n                if(response.affectedRows){\r\n                  return  setError(\"Membership plan change successfully completed\")\r\n                }\r\n                setError(response.message)\r\n                console.log(response)\r\n            })\r\n        }else{\r\n          if(!membership){\r\n            setError(\"Invalid membership\")\r\n            return\r\n          }\r\n          if(!Starting ||!Ending){\r\n            setError(\"Please select a starting or ending date.\")\r\n            return\r\n          }\r\n          if(dateDifference(Starting, Ending)<0){\r\n            setError(\"Invalid! Starting date must be previous from ending date\")\r\n            return\r\n          }\r\n          setError('Please wait...')\r\n            // let time=Plans.filter(p=>p.type==Select)[0].time;\r\n            // let date=new Date()\r\n            // let start=`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`;\r\n            // let ending=`${date.getFullYear()+time}-${date.getMonth()+1}-${date.getDate()}`;\r\n            postData(url + '/updateData',{\r\n                auth: auth.currentUser,\r\n                tableName: 'user',\r\n                columns: ['membership_type','starting_date','ending_date','paid'],\r\n                values: [Select,writeDate(new Date(Starting)),writeDate(new Date(Ending)),''],\r\n                condition: `uid='${uid}'`\r\n            }).then(response => {\r\n                if(response.affectedRows){\r\n                  return  setError(\"Membership plan change successfully completed\")\r\n                }\r\n                setError(response.message)\r\n            })\r\n            if(membership==newMembership){\r\n              return\r\n            }\r\n            let codes=null;\r\n        if(membership.account!='no'){\r\n            let account=parseInt(membership.account)\r\n            let index=0;\r\n            while(index<account){\r\n                let id=makeid(16)\r\n                if(!codes){\r\n                    codes =`'`+id+`'`\r\n                }else{\r\n                    codes=codes+\", \"+`'`+id+`'`\r\n                }\r\n                postData(url + '/setData',{\r\n                    auth: auth.currentUser,\r\n                    tableName: 'family_code',\r\n                    columns: ['code','buyer_id'],\r\n                    values: [id,uid]\r\n                }).then(data => {\r\n                    console.log(data)\r\n                })\r\n                index++;\r\n            }\r\n        }\r\n        let msg=codes?`Your Family Access Code is ${codes} (If applicable)`:\"\"\r\n            postData(url +'/sendEmail',{ \r\n              from:'info@smira.club',\r\n              to:Data[0].email,\r\n              subject:`You’re now officially a member of our family - Smira Club`,\r\n              text: `\r\n              <p>Dear <strong>${Data[0].name}</strong>,</p>\r\n              <p>Welcome to Smira Club. We’re thrilled to see you here!</p>\r\n              <p>Congratulations! <br>\r\n              Membership Type:<strong> ${membership.name} </strong><br>\r\n              Total Days: <strong>${dateDifference(Starting, Ending)} </strong><br>\r\n              <p>We’re confident that membership will help you save more money while enjoying the luxuries of our services. </p>\r\n              <p>${msg}</p>\r\n              <p>Best regards, <br>\r\n                Smira Club</p>\r\n\r\n              <b>Smira Services - ‘A sweet memory is really affordable’ </b>\r\n\r\n\r\n              <p><b>Smira Sevices Pvt. Ltd. </b><br>\r\n             Ranjit Studio Compound, <br>\r\n              Ground & 1st Floor, <br>\r\n              M-Block, Plot No. 115, <br>\r\n              Dada Saheb Phalke Marg, <br>\r\n              Opp. Bharatkshetra, Hindmata, <br>\r\n              Dadar East, Mumbai, <br>\r\n              Maharashtra 400014 </p>\r\n\r\n              <p><b>Contact No. </b><br>\r\n              9833733477<br>\r\n              9833733977<br>\r\n              Email - support@smira.club</p>\r\n              `\r\n          }).then(data=>{\r\n              console.log(data)\r\n          })\r\n        }\r\n        \r\n\r\n    }\r\n    return (\r\n        <div>\r\n          <div className=\"page-header\">\r\n            <h3 className=\"page-title\"> Change Membership Plan </h3>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Plans</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Add</li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Information</h4>\r\n                  <form className=\"form-sample\">\r\n                    <p className=\"card-description\">Edit plans and offer </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Select Plan</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select value={Select} onChange={(e)=>{\r\n                              setMembership(Plans.filter(p=>p.type ==e.target.value)[0]) \r\n                              setSelect(e.target.value)\r\n                            }} className=\"form-control\">\r\n                            <option value=\"non\">Non Member</option>\r\n                            {\r\n                              Plans?(\r\n                                Plans.map((doc, i) =>(\r\n                                  <option key={i} value={doc.type}>{doc.name}</option>\r\n                                ))\r\n                              ):(\r\n                                <option>Select one</option>\r\n                              )\r\n                            }\r\n                              \r\n                             \r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      \r\n                    </div>\r\n                    {\r\n                      Select!='non'?(\r\n                        <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Starting Date</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Starting} onChange={(e)=>setStarting(e.target.value)} placeholder='' type=\"date\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Ending Date</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Ending} onChange={(e)=>setEnding(e.target.value)} placeholder='' type=\"date\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                      ):(<></>)\r\n                    }\r\n                    {error?(\r\n                    <div className=\"alert alert-primary\" role=\"alert\">{error}</div>\r\n                  ):(\r\n                    <></>\r\n                  )}\r\n                  </form>\r\n                  <button onClick={submit}   className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemberAction;"],"names":["auth","getAuth","app","uid","useParams","React","Data","setData","error","setError","Plans","setPlans","Select","setSelect","Starting","setStarting","Ending","setEnding","membership","setMembership","newMembership","setNewMembership","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","postData","url","tableName","condition","then","data","Array","isArray","membership_type","visualDate","starting_date","ending_date","console","log","message","filter","p","type","className","href","onClick","event","preventDefault","value","onChange","e","target","map","doc","name","placeholder","role","query","response","affectedRows","dateDifference","currentUser","columns","values","writeDate","Date","codes","account","parseInt","index","id","msg","from","to","email","subject","text"],"sourceRoot":""}