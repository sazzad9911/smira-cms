{"version":3,"file":"static/js/503.eb5c7fe7.chunk.js","mappings":"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","sources":["app/customer/Order.js"],"sourcesContent":["import React from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport { Dropdown, ButtonGroup, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { postData, url, setHotelBooking, convertDate, writeDate,setBookAppointment } from '../../action';\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\n\r\nconst Order = () => {\r\n    const [Checked, setChecked] = React.useState('Hotels')\r\n    const hotelBooking = useSelector(state => state.hotelBooking)\r\n    const userInfo = useSelector(state => state.userInfo)\r\n    const hotels = useSelector(state => state.hotels)\r\n    const deals = useSelector(state => state.deals)\r\n    const bookAppointment= useSelector(state => state.bookAppointment)\r\n    const [data, setData] = React.useState([])\r\n    const [data2, setData2] = React.useState([])\r\n    const dispatch = useDispatch()\r\n    const auth = getAuth(app)\r\n    const [action, setAction] = React.useState(false)\r\n    const brands= useSelector(state => state.brands)\r\n    const [Page,setPage]= React.useState(1)\r\n    const [TotalPage,setTotalPage]= React.useState([])\r\n\r\n    React.useEffect(() => {\r\n        if (hotels && hotelBooking && userInfo && deals && bookAppointment&& Checked == 'Hotels') {\r\n            let arr = []\r\n            hotelBooking.forEach((doc,i) => {\r\n                if(i<(Page*10) && i>=((Page*10)-10)){\r\n                let user = userInfo.filter(user => user.uid == doc.user_id)\r\n                let hotel = hotels.filter(hotel => hotel.id == doc.hotel_id)\r\n                let data = { data: doc, user: user[0], hotel: hotel[0] }\r\n                arr.push(data)\r\n                }\r\n            })\r\n            setData(arr)\r\n            let number=(hotelBooking.length/10)\r\n            let floatNumber=parseInt(number)\r\n            let numPage=[]\r\n           for(let i=0; i<floatNumber; i++) {\r\n              numPage.push(floatNumber)\r\n            }\r\n      \r\n          if(number>floatNumber){\r\n          numPage.push(floatNumber)\r\n          setTotalPage(numPage)\r\n           }else{\r\n          setTotalPage(numPage)\r\n           }\r\n        } \r\n        if (brands && hotels && hotelBooking && userInfo && bookAppointment&& deals && Checked == 'Deals') {\r\n            let arr = []\r\n            bookAppointment.forEach((doc,i) => {\r\n                if(i<(Page*10) && i>=((Page*10)-10)){\r\n                let user = userInfo.filter(user => user.uid == doc.uid)\r\n                let deal = deals.filter(deal => deal.id == doc.deal_id)\r\n                let brand = brands.filter(b=>b.id==deal[0].brand_id)\r\n                let data = { data: doc, user: user[0], deal: deal[0],brand: brand[0]}\r\n                arr.push(data)\r\n                }\r\n            })\r\n            setData2(arr)\r\n            let number=(bookAppointment.length/10)\r\n            let floatNumber=parseInt(number)\r\n            let numPage=[]\r\n           for(let i=0; i<floatNumber; i++) {\r\n              numPage.push(floatNumber)\r\n            }\r\n      \r\n          if(number>floatNumber){\r\n          numPage.push(floatNumber)\r\n          setTotalPage(numPage)\r\n           }else{\r\n          setTotalPage(numPage)\r\n           }\r\n        }\r\n    }, [Checked+Page+hotels+deals+userInfo+bookAppointment+hotelBooking+brands])\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'hotel_booking',\r\n            orderColumn: 'date'\r\n        }).then(data => {\r\n            if (Array.isArray(data)) {\r\n                return dispatch(setHotelBooking(data));\r\n            }\r\n            console.log(data);\r\n        })\r\n    }, [action])\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'book_appointment',\r\n            orderColumn: 'date'\r\n        }).then(data => {\r\n            if (Array.isArray(data)) {\r\n                return dispatch(setBookAppointment(data));\r\n            }\r\n            console.log(data);\r\n        })\r\n    }, [action])\r\n\r\n\r\n    const acceptHotel = (data) => {\r\n        postData(url + '/setData', {\r\n            auth: auth.currentUser,\r\n            tableName: 'redeem_history',\r\n            columns: ['purches_type', 'purches_id', 'name', 'date', 'image', 'uid'],\r\n            values: ['hotel', data.data.id, data.hotel.name, writeDate(new Date()), data.hotel.image, data.user.uid]\r\n        }).then(d => {\r\n            if (d.insertId) {\r\n                postData(url + '/updateData', {\r\n                    tableName: 'hotel_booking',\r\n                    columns: ['visible'],\r\n                    values: [1],\r\n                    condition: 'id=' + data.data.id,\r\n                }).then(dt => {\r\n                    setAction(dt);\r\n                    console.log(dt);\r\n                })\r\n            }\r\n            console.log(d.message)\r\n        })\r\n        let user=userInfo.filter(d=>d.uid==data.user.uid)\r\n        if(user && user.length > 0 && user[0].email){\r\n            postData(url + '/sendMessage',{\r\n                title: 'Booking Request Confirmed!',\r\n                body:`Please check your email for your booking details at ${data.hotel.name}.`,\r\n                uid: user[0].uid\r\n            }).then(response => {\r\n                console.log(response)\r\n            })\r\n            postData(url + '/setData',{\r\n                auth: auth.currentUser,\r\n                tableName:'notification',\r\n                columns:['name','description','uid'],\r\n                values: ['Booking Request Confirmed!',`Please check your email for your booking details at ${data.hotel.name}.`,user[0].uid]\r\n            }).then(response =>{\r\n                console.log(response)\r\n            })\r\n            postData(url + '/sendEmail',{\r\n                to:user[0].email,\r\n                subject:'Your Booking Request has been confirmed - Smira Club',\r\n                text:`<p>Hello <b> ${user[0].name}</b></p>\r\n                <p>This email is to confirm your booking at-</p> \r\n\r\n               <p>Hotel name: ${data.hotel.name}</p>\r\n               <p> Hotel location: ${data.hotel.address}</p>\r\n               <p> Total number of guests: ${data.data.adult+data.data.children}</p>\r\n               <p>Number of kids below 5 years: ${data.data.children} </p>\r\n               <p>Number of rooms: ${data.data.room}</p>\r\n               <p> Food (Breakfast and Dinner unlimited): <b>${data.data.veg}</b> Veg, ${data.data.non_veg} Non-Veg</p>\r\n               <p> Amenities: <b>${data.hotel.conditions}</b></p>\r\n               <p>Check-in date: ${convertDate(data.data.check_in)}</p>\r\n               <p> Check-out date: ${convertDate(data.data.check_out)}</p>\r\n                \r\n                <p>If you have any inquiries, please do not hesitate to contact us.</p>\r\n                \r\n               <p> We are looking forward to your visit and hope that you enjoy your stay.</p>\r\n                \r\n                \r\n               <p> Best regards, </p>\r\n               <p> Smira Club</p>\r\n                 \r\n               <b> Smira Services - ‘A sweet memory is really affordable’ </b>\r\n                 \r\n                 \r\n                 \r\n                 \r\n                <b>Smira Sevices Pvt. Ltd. </b>\r\n                <p>Ranjit Studio Compound, </p>\r\n               <p> Ground & 1st Floor, </p>\r\n               <p> M-Block, Plot No. 115, </p>\r\n               <p> Dada Saheb Phalke Marg, </p>\r\n               <p>  Opp. Bharatkshetra, Hindmata, </p>\r\n               <p> Dadar East, Mumbai, </p>\r\n               <p> Maharashtra 400014 </p>\r\n                 \r\n               <b> Contact No. </b>\r\n               <p> 9833733477</p>\r\n               <p>9833733977</p>\r\n               <p> Email - support@smira.club</p>\r\n                `\r\n            }).then(result => {\r\n                console.log(result);\r\n            })\r\n        }\r\n        \r\n    }\r\n    const declineHotel = (data) => {\r\n        postData(url + '/updateData', {\r\n            tableName: 'hotel_booking',\r\n            columns: ['visible'],\r\n            values: [1],\r\n            condition: 'id=' + data.data.id,\r\n        }).then(dt => {\r\n            setAction(dt);\r\n            console.log(dt);\r\n        })\r\n        let user=userInfo.filter(d=>d.uid==data.user.uid)\r\n        if(user && user.length > 0 && user[0].email){\r\n            postData(url + '/sendMessage',{\r\n                title: 'Booking Request Not Confirmed.',\r\n                body:`Your booking at ${data.hotel.name} has not been confirmed.`,\r\n                uid: user[0].uid\r\n            }).then(response => {\r\n                console.log(response)\r\n            })\r\n            postData(url + '/setData',{\r\n                auth: auth.currentUser,\r\n                tableName:'notification',\r\n                columns:['name','description','uid'],\r\n                values: ['Booking Request Not Confirmed.',`Your booking at ${data.hotel.name} has not been confirmed.`,user[0].uid]\r\n            }).then(response =>{\r\n                console.log(response)\r\n            })\r\n            postData(url + '/sendEmail',{\r\n                to:user[0].email,\r\n                subject:'Your Booking Request has not been confirmed - Smira Club',\r\n                text:`<p>Hello <b>${user[0].name}</b>,</p>\r\n                <p>We had received your request for a booking at- \r\n                <p>Hotel location: ${data.hotel.address}</p>\r\n                <p>Total number of guests: ${data.data.adult+data.data.children} </p>\r\n                <p>Number of kids below 5 years: ${data.data.children}</p>\r\n                <p>Number of rooms: ${data.data.room}</p>\r\n                <p>Check-in date: ${convertDate(data.data.check_in)}</p>\r\n                <p>Check-out date: ${convertDate(data.data.check_out)}</p>\r\n                <p>We are very pleased to know that you want a booking with us, however, we regret to inform you that your request has <b>NOT BEEN CONFIRMED</b> due to non-availability of rooms or some technical reasons.</p>\r\n                <p>Sorry for the inconvenience! We assure you that we will be available in the future for you whenever you wish to make a booking.</p>\r\n                <p>Best regards, \r\n                <p>Smira Club\r\n                <b>Smira Services - ‘A sweet memory is really affordable’ </b>\r\n                <p>Smira Services Pvt. Ltd. </p>\r\n                <p>Ranjit Studio Compound, </p>\r\n                <p>Ground & 1st Floor, </p>\r\n                <p>M-Block, Plot No. 115, </p>\r\n                <p>Dada Saheb Phalke Marg, </p>\r\n                <p>Opp. Bharatkshetra, Hindmata,</p> \r\n                <p>Dadar East, Mumbai, </p>\r\n                <p>Maharashtra 400014 </p>\r\n \r\n                <b>Contact No.</b> \r\n                <p>9833733477</p>\r\n                <p>9833733977</p>\r\n                <p>Email - support@smira.club</p>\r\n                `\r\n            }).then(result => {\r\n                console.log(result);\r\n            })\r\n        }\r\n    }\r\n    const acceptDeal=(data)=>{\r\n        let brand=brands.filter(b => b.id==data.deal.brand_id)\r\n        postData(url + '/setData', {\r\n            auth: auth.currentUser,\r\n            tableName: 'redeem_history',\r\n            columns: ['purches_type', 'purches_id', 'name', 'date', 'image', 'uid'],\r\n            values: ['deal', data.data.id, data.deal.name, writeDate(new Date()), brand[0].image, data.user.uid]\r\n        }).then(d => {\r\n            if (d.insertId) {\r\n                postData(url + '/updateData', {\r\n                    tableName: 'book_appointment',\r\n                    columns: ['visible'],\r\n                    values: [1],\r\n                    condition: 'id=' + data.data.id,\r\n                }).then(dt => {\r\n                    setAction(dt);\r\n                    console.log(dt);\r\n                })\r\n            }\r\n            console.log(d.message)\r\n        })\r\n        let user=userInfo.filter(d=>d.uid==data.user.uid)\r\n        if(user && user.length > 0 && user[0].email){\r\n            postData(url + '/sendEmail',{\r\n                to:user[0].email,\r\n                subject:'Confirmation mail for your appointment request',\r\n                text:`<p>Hello ${user[0].name}</p>\r\n                <p>Your appointment request for <strong>${data.deal.name}</strong> is accepted by SMIRA CLUB</p>\r\n                <p>To know details---Call us</p>\r\n                <p>Best Regards</p>\r\n                <p>Smira Club</p>\r\n                 \r\n               <p> Ranjit Studio Compound, </p>\r\n               <p> Ground & 1st Floor, </p>\r\n               <p> C-Block, Plot No. 115, </p>\r\n               <p> Dada Saheb Phalke Marg, </p>\r\n               <p> Opp. Bharatkshetra, Hindmata, </p>\r\n               <p> Dadar East, Mumbai, </p>\r\n                <p>Maharashtra 400014 </p>\r\n                 \r\n                <p>Contact No.</p> \r\n                <p>9819812456</p>\r\n               <p> 9833733477</p>\r\n               <p> 9820342389</p>\r\n                `\r\n            }).then(result => {\r\n                console.log(result);\r\n            })\r\n        }\r\n    }\r\n    const declineDeal=(data)=>{\r\n        postData(url + '/updateData', {\r\n            tableName: 'book_appointment',\r\n            columns: ['visible'],\r\n            values: [1],\r\n            condition: 'id=' + data.data.id,\r\n        }).then(dt => {\r\n            setAction(dt);\r\n            console.log(dt);\r\n        })\r\n        let user=userInfo.filter(d=>d.uid==data.user.uid)\r\n        if(user && user.length > 0 && user[0].email){\r\n            postData(url + '/sendEmail',{\r\n                to:user[0].email,\r\n                subject:'Rejection mail for your appointment request',\r\n                text:`<p>Hello ${user[0].name}</p>\r\n                <p>Your appointment request for <strong>${data.deal.name}</strong> is rejected by SMIRA CLUB due some issues.</p>\r\n                <p>To know details---Call us</p>\r\n                <p>Best Regards</p>\r\n                <p>Smira Club</p>\r\n                 \r\n               <p> Ranjit Studio Compound, </p>\r\n               <p> Ground & 1st Floor, </p>\r\n               <p> C-Block, Plot No. 115, </p>\r\n               <p> Dada Saheb Phalke Marg, </p>\r\n               <p> Opp. Bharatkshetra, Hindmata, </p>\r\n               <p> Dadar East, Mumbai, </p>\r\n                <p>Maharashtra 400014 </p>\r\n                 \r\n                <p>Contact No.</p> \r\n                <p>9819812456</p>\r\n               <p> 9833733477</p>\r\n               <p> 9820342389</p>\r\n                `\r\n            }).then(result => {\r\n                console.log(result);\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"page-header\">\r\n                <h3 className=\"page-title\"> All Orders </h3>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><a href=\"#\" onClick={event => event.preventDefault()}>Orders</a></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Action</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Select Type</h4>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle variant=\"btn btn-gradient-secondary\" id=\"dropdownMenuOutlineButton2\">\r\n                                    {Checked}\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Header>Order Type</Dropdown.Header>\r\n                                    <Dropdown.Item onClick={() => {\r\n                                        setChecked('Hotels')\r\n                                    }}>Hotels</Dropdown.Item>\r\n                                    <Dropdown.Item onClick={() => {\r\n                                        setChecked('Deals')\r\n                                    }}>Deals</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th> Name </th>\r\n                                            <th> Email </th>\r\n                                            <th> Phone </th>\r\n                                            <th> {Checked} Name </th>\r\n                                            {Checked=='Hotels'?(<th> Check In </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Check Out </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Adults </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Children </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Room </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Veg </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Non Veg </th>):(<></>)}\r\n                                            {Checked=='Hotels'?(<th> Additional Note </th>):(<></>)}\r\n                                            {Checked!='Hotels'?(<th> Brand Name </th>):(<></>)}\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            Checked == 'Hotels' ? (\r\n                                                data.map((doc, i) => (\r\n                                                    <List key={i} data={doc}\r\n                                                        declineHotel={declineHotel}\r\n                                                        acceptHotel={acceptHotel} />\r\n                                                ))\r\n                                            ) : (\r\n                                                data2.map((doc, i) => (\r\n                                                    <List2 key={i} data={doc}\r\n                                                        declineHotel={declineDeal}\r\n                                                        acceptHotel={acceptDeal} />\r\n                                                ))\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                { TotalPage.length>1?(\r\n                    <nav style={{\r\n                        width: '100%',\r\n                        overflow: 'scroll'\r\n                    }} >\r\n                <ul className=\"pagination\">\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page>1){ \r\n                        setPage(Page-1)\r\n                    }\r\n                }} className=\"page-link\">Previous</button></li>\r\n                {\r\n                    TotalPage.map((doc, i) => (\r\n                      <li key={i} className={Page==(i+1)?\"page-item active\":\"page-item\"}><button onClick={()=>{\r\n                          setPage(i+1)\r\n                      }} className=\"page-link\">{i+1}</button></li>\r\n                     ))\r\n                }\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page<TotalPage.length){\r\n                        setPage(Page+1);\r\n                    }\r\n                }} className=\"page-link\">Next</button></li>\r\n                </ul>\r\n               </nav>\r\n                ):(\r\n                    <></>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Order;\r\nconst List = (props) => {\r\n    const doc = props.data\r\n    const [Visible, setVisible] = React.useState(doc.data.visible)\r\n    return (\r\n        <tr>\r\n            <td> {doc.user.name} </td>\r\n            <td> {doc.user.email} </td>\r\n            <td> {doc.user.phone} </td>\r\n            <td>\r\n                {doc.hotel?doc.hotel.name:''}\r\n            </td>\r\n            <td> {convertDate(doc.data.check_in)} </td>\r\n            <td> {convertDate(doc.data.check_out)} </td>\r\n            <td> {doc.data.adult} </td>\r\n            <td> {doc.data.children} </td>\r\n            <td> {doc.data.room} </td>\r\n            <td> {doc.data.veg} </td>\r\n            <td> {doc.data.non_veg} </td>\r\n            <td> {doc.data.note} </td>\r\n            {\r\n                Visible == 1 ? (\r\n                    <td style={{ width: '200px' }}></td>\r\n                ) : (\r\n                    <td>\r\n                        <button onClick={() => {\r\n                            props.acceptHotel(doc)\r\n                            setVisible(1)\r\n                        }} className=\"btn btn-gradient-success btn-rounded btn-fw\">Accept</button>\r\n\r\n                        <button onClick={() => {\r\n                            props.declineHotel(doc)\r\n                            setVisible(1);\r\n                        }} style={{\r\n                            marginLeft: '10px'\r\n                        }} className=\"btn btn-gradient-danger btn-rounded btn-fw\">Cancel</button>\r\n                    </td>\r\n                )\r\n            }\r\n        </tr>\r\n    )\r\n}\r\nconst List2 = (props) => {\r\n    const doc = props.data\r\n    const [Visible, setVisible] = React.useState(doc.data.visible)\r\n    //console.log(doc.deal)\r\n    return (\r\n        <tr>\r\n            <td> {doc.user?doc.user.name:'...'} </td>\r\n            <td> {doc.user.email} </td>\r\n            <td> {doc.user?doc.user.phone:'---'} </td>\r\n            <td>\r\n                {doc.deal && doc.deal.name?doc.deal.name:'...'}\r\n            </td>\r\n            <td>{doc.brand && doc.brand.name?doc.brand.name:'...'}</td>\r\n            {\r\n                Visible == 1 ? (\r\n                    <td style={{ width: '200px' }}></td>\r\n                ) : (\r\n                    <td>\r\n                        <button onClick={() => {\r\n                            props.acceptHotel(doc)\r\n                            setVisible(1)\r\n                        }} className=\"btn btn-gradient-success btn-rounded btn-fw\">Accept</button>\r\n\r\n                        <button onClick={() => {\r\n                            props.declineHotel(doc)\r\n                            setVisible(1);\r\n                        }} style={{\r\n                            marginLeft: '10px'\r\n                        }} className=\"btn btn-gradient-danger btn-rounded btn-fw\">Cancel</button>\r\n                    </td>\r\n                )\r\n            }\r\n        </tr>\r\n    )\r\n}"],"names":["React","Checked","setChecked","hotelBooking","useSelector","state","userInfo","hotels","deals","bookAppointment","data","setData","data2","setData2","dispatch","useDispatch","auth","getAuth","app","action","setAction","brands","Page","setPage","TotalPage","setTotalPage","arr","forEach","doc","i","user","filter","uid","user_id","hotel","id","hotel_id","push","number","length","floatNumber","parseInt","numPage","deal","deal_id","brand","b","brand_id","postData","url","tableName","orderColumn","then","Array","isArray","setHotelBooking","console","log","setBookAppointment","acceptHotel","currentUser","columns","values","name","writeDate","Date","image","d","insertId","condition","dt","message","email","title","body","response","to","subject","text","address","adult","children","room","veg","non_veg","conditions","convertDate","check_in","check_out","result","declineHotel","acceptDeal","declineDeal","className","href","onClick","event","preventDefault","variant","map","List","List2","style","width","overflow","props","visible","Visible","setVisible","phone","note","marginLeft"],"sourceRoot":""}