{"version":3,"file":"static/js/8139.d2cbe69c.chunk.js","mappings":"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","sources":["app/member/MemberAction.js"],"sourcesContent":["import React from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport {postData,url,writeDate,dateDifference,visualDate} from './../../action'\r\nimport { Form } from 'react-bootstrap';\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\n\r\nconst MemberAction = () => {\r\n    const auth= getAuth(app)\r\n    const {uid} =useParams()\r\n    const [Data,setData]=React.useState(null)\r\n    const [error,setError]= React.useState()\r\n    const [Plans,setPlans]=React.useState()\r\n    const [Select,setSelect]=React.useState()\r\n    const [Starting,setStarting]=React.useState()\r\n    const [Ending,setEnding]=React.useState()\r\n\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'user',\r\n            condition:`uid='${uid}'`\r\n        }).then(data =>{\r\n            if(Array.isArray(data)&& data.length>0){\r\n                if(!data[0].membership_type){\r\n                    setSelect('non')\r\n                }else{\r\n                    setSelect(data[0].membership_type)\r\n                    setStarting(visualDate(data[0].starting_date))\r\n                    setEnding(visualDate(data[0].ending_date))\r\n                }\r\n                return setData(data)\r\n            }\r\n            console.log(data.message)\r\n        })\r\n    },[uid])\r\n    React.useEffect(() => {\r\n        postData(url + '/getData', {\r\n            tableName: 'membership'\r\n        }).then(data => {\r\n            if(Array.isArray(data)&& data.length>0){\r\n               return setPlans(data)\r\n            }\r\n            console.log(data.message)\r\n        })\r\n    })\r\n    const submit=()=>{\r\n        if(!Plans){\r\n            setError(\"Error loading membership plans\")\r\n            return\r\n        }\r\n        if(!Select){\r\n            setError(\"Invalid selection.\")\r\n            return\r\n        }\r\n        if(Select=='non'){\r\n            postData(url + '/query',{\r\n                query:`UPDATE user SET membership_type=NULL,starting_date=NULL,ending_date=NULL WHERE uid='${uid}'`\r\n            }).then(response => {\r\n                if(response.affectedRows){\r\n                  return  setError(\"Membership plan change successfully completed\")\r\n                }\r\n                setError(response.message)\r\n                console.log(response)\r\n            })\r\n        }else{\r\n          if(!Starting ||!Ending){\r\n            setError(\"Please select a starting or ending date.\")\r\n            return\r\n          }\r\n          if(dateDifference(Starting, Ending)<0){\r\n            setError(\"Invalid! Starting date must be previous from ending date\")\r\n            return\r\n          }\r\n            // let time=Plans.filter(p=>p.type==Select)[0].time;\r\n            // let date=new Date()\r\n            // let start=`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`;\r\n            // let ending=`${date.getFullYear()+time}-${date.getMonth()+1}-${date.getDate()}`;\r\n            postData(url + '/updateData',{\r\n                auth: auth.currentUser,\r\n                tableName: 'user',\r\n                columns: ['membership_type','starting_date','ending_date'],\r\n                values: [Select,writeDate(new Date(Starting)),writeDate(new Date(Ending))],\r\n                condition: `uid='${uid}'`\r\n            }).then(response => {\r\n                if(response.affectedRows){\r\n                  return  setError(\"Membership plan change successfully completed\")\r\n                }\r\n                setError(response.message)\r\n            })\r\n        }\r\n        \r\n\r\n    }\r\n    return (\r\n        <div>\r\n          <div className=\"page-header\">\r\n            <h3 className=\"page-title\"> Change Membership Plan </h3>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Plans</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Add</li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Information</h4>\r\n                  <form className=\"form-sample\">\r\n                    <p className=\"card-description\">Edit plans and offer </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Select Plan</label>\r\n                          <div className=\"col-sm-9\">\r\n                            <select value={Select} onChange={(e)=>{\r\n                              //setMembership(e.target.value)\r\n                              setSelect(e.target.value)\r\n                            }} className=\"form-control\">\r\n                            <option value=\"non\">Non Member</option>\r\n                            {\r\n                              Plans?(\r\n                                Plans.map((doc, i) =>(\r\n                                  <option key={i} value={doc.type}>{doc.name}</option>\r\n                                ))\r\n                              ):(\r\n                                <option>Select one</option>\r\n                              )\r\n                            }\r\n                              \r\n                             \r\n                            </select>\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      \r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Starting Date</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Starting} onChange={(e)=>setStarting(e.target.value)} placeholder='' type=\"date\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Ending Date</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control value={Ending} onChange={(e)=>setEnding(e.target.value)} placeholder='' type=\"date\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    {error?(\r\n                    <div className=\"alert alert-primary\" role=\"alert\">{error}</div>\r\n                  ):(\r\n                    <></>\r\n                  )}\r\n                  </form>\r\n                  <button onClick={submit}   className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemberAction;"],"names":["auth","getAuth","app","uid","useParams","React","setData","error","setError","Plans","setPlans","Select","setSelect","Starting","setStarting","Ending","setEnding","postData","url","tableName","condition","then","data","Array","isArray","length","membership_type","visualDate","starting_date","ending_date","console","log","message","className","href","onClick","event","preventDefault","value","onChange","e","target","map","doc","i","type","name","placeholder","role","query","response","affectedRows","dateDifference","currentUser","columns","values","writeDate","Date"],"sourceRoot":""}