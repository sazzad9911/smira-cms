{"version":3,"file":"static/js/4308.ae9c2275.chunk.js","mappings":";yOA4MA,UA5LmB,WACf,MAAuBA,EAAAA,WAAvB,eAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,EAAAA,WAAtB,eAAOG,EAAP,KAAYC,EAAZ,KACA,EAAwBJ,EAAAA,WAAxB,eAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,EAAAA,WAAxB,eAAOO,EAAP,KAAaC,EAAb,KACA,EAA0BR,EAAAA,UAAe,GAAzC,eAAOS,EAAP,KAAcC,EAAd,KACA,EAAuBV,EAAAA,SAAe,MAAtC,eAAOW,EAAP,KAAaC,EAAb,KACMC,GAAOC,EAAAA,EAAAA,IAAQC,EAAAA,GACrB,EAA8Bf,EAAAA,WAA9B,eACA,GADA,UACgCA,EAAAA,UAAe,IAA/C,eAEA,GAFA,WACagB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UACNlB,EAAAA,YAAlC,eAAOmB,EAAP,KAAkBC,EAAlB,KAEApB,EAAAA,WAAgB,YACZqB,EAAAA,EAAAA,IAASC,EAAAA,GAAM,WAAW,CACtBC,UAAW,gBACZC,MAAK,SAAAC,GACDC,MAAMC,QAAQF,IACbb,EAAQa,QAGlB,CAAChB,IACHT,EAAAA,WAAgB,YACdqB,EAAAA,EAAAA,IAASC,EAAAA,GAAM,WAAW,CACxBC,UAAW,gBACVC,MAAK,SAAAI,GACN,GAAGF,MAAMC,QAAQC,IAAQA,EAAKC,OAAO,EACpC,OAAOT,EAAcQ,GAEtBE,QAAQC,IAAIH,QAEd,IAqCF,OACI,4BACA,iBAAKI,UAAU,cAAf,WACE,eAAIA,UAAU,aAAd,6BACA,gBAAK,aAAW,aAAhB,UACE,gBAAIA,UAAU,aAAd,WACE,eAAIA,UAAU,kBAAd,UAAgC,cAAGC,KAAK,KAAKC,QAAS,SAAAC,GAAK,OAAIA,EAAMC,kBAArC,oBAChC,eAAIJ,UAAU,yBAAyB,eAAa,OAApD,8BAIN,gBAAKA,UAAU,MAAf,UACE,gBAAKA,UAAU,qBAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,0BACA,kBAAMA,UAAU,cAAhB,WACE,cAAGA,UAAU,mBAAb,sDACA,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,UAAC,UAAD,CAAYA,UAAU,MAAtB,WACE,kBAAOA,UAAU,0BAAjB,gCACA,gBAAKA,UAAU,WAAf,UACA,SAAC,YAAD,CAAcK,YAAY,+BAA+BC,SAAU,SAACC,GAAD,OAAKrC,EAAQqC,EAAEC,OAAOC,QAASC,KAAK,iBAI3G,gBAAKV,UAAU,WAAf,UACA,UAAC,UAAD,CAAYA,UAAU,MAAtB,WACI,kBAAOA,UAAU,0BAAjB,mBACA,gBAAKA,UAAU,WAAf,UACA,SAAC,YAAD,CAAcM,SAAU,SAACC,GAAD,OAAKnC,EAAQmC,EAAEC,OAAOC,QAAQJ,YAAY,aAAaK,KAAK,oBAK5F,gBAAKV,UAAU,MAAf,UAEI,gBAAKA,UAAU,WAAf,UACA,UAAC,UAAD,CAAYA,UAAU,MAAtB,WACI,kBAAOA,UAAU,0BAAjB,yBACA,gBAAKA,UAAU,WAAf,UACA,SAAC,YAAD,CAAcM,SAAU,SAACC,GACvBjC,EAASiC,EAAEC,OAAOC,OAClBX,QAAQC,IAAIQ,EAAEC,OAAOC,QACjBJ,YAAY,SAASK,KAAK,oBAKrCnC,GACD,gBAAKyB,UAAU,sBAAsBW,KAAK,QAA1C,SAAmDpC,KAEnD,4BAIF,mBAAQ2B,QAnFT,WAGH7B,GAAUF,GAASF,EAIpBI,EAAM,GAAKA,EAAM,GAClBG,EAAS,oCAGXa,EAAAA,EAAAA,IAASC,EAAAA,GAAM,WAAW,CACtBT,KAAMA,EAAK+B,YACXrB,UAAW,cACXsB,QAAS,CAAC,OAAO,OAAO,SACxBC,OAAQ,CAAC7C,EAAKE,EAAKE,KAClBmB,MAAK,SAAAuB,GACNjB,QAAQC,IAAIgB,GACTA,EAAOC,UACRxC,EAAS,8BACTE,GAAWD,IAEXD,EAASuC,EAAOE,YAlBlBzC,EAAS,+BA+EkBwB,UAAU,gDAAjC,4BAKR,gBAAKA,UAAU,MAAf,UACE,gBAAKA,UAAU,qCAAf,UACE,gBAAKA,UAAU,OAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,0BACA,gBAAKA,UAAU,mBAAf,UACE,mBAAOA,UAAU,sBAAjB,WACE,4BACE,2BACE,oCACA,0CACA,oCACA,wCACA,yCAGJ,2BAEIrB,EACIA,EAAKkB,OAAO,EACRlB,EAAKuC,KAAI,SAACC,EAAKC,GAAN,OACT,2BACA,wBAAKD,EAAIE,QACT,wBACCF,EAAIG,SAEL,wBAAKH,EAAII,QACT,wBAEIpC,EACAA,EAAWqC,QAAO,SAAAC,GAAC,OAAEA,EAAEF,MAAMJ,EAAII,QAAM1B,OAAO,OAGlD,yBACA,mBAAQG,UAAU,6CAA6CE,QAAS,WApIjF,IAACwB,EAAAA,EAqIuBP,EAAIO,IApI3CrC,EAAAA,EAAAA,IAASC,EAAAA,GAAM,cAAe,CAC1BC,UAAW,cACXoC,UAAU,MAAMD,IACjBlC,MAAK,SAAAC,GACJK,QAAQC,IAAIN,GACZf,GAAWD,OA8HS,wBAbS2C,OAsBT,yBAAI,iDAET,yBAAI,iHC/L/B,IAAMQ,EAAW,CACfC,WAAY,kCACZC,gBAAiB,qBACjBC,KAAM,OACNC,MAAO,SCFHC,EAAe,EACfC,EAAiB,SAACC,GACtB,IAAIC,EAAc,GAEZC,EAAQF,EAAMG,WAAWC,cAAcX,EAASE,iBAMtD,OAJIO,IACFD,EAAcC,EAAMG,aAGfJ,GAGHK,EAAqB,SAACC,GAC1B,GAAIA,EAAQC,WAAW9C,OAAS,EAG9B,IAFA,IAAM8C,EAAa,GAAGC,MAAMC,KAAKH,EAAQC,YAEhCvB,EAAI,EAAGA,EAAIuB,EAAW9C,OAAQuB,IAAK,CAC1C,IAAM0B,EAAOH,EAAWvB,GACxB,GAAI0B,EAAKC,WAAad,EACpB,OAAOa,EAKb,OAAOJ,GAGHM,EAAqB,SAACb,GAC1B,IAAMC,EAAcD,EAAMc,kBAAkBb,YACtCC,EAAQF,EAAMG,WAAWC,cAAcX,EAASE,iBAElDO,IACcI,EAAmBJ,GAE3BG,YAAcJ,IClCpBc,IAAYC,OAAOC,KACnBC,EAAY,WACZC,EAAsB,KAEtBC,EAAmB,SAACpB,GACxB,GAAIA,EAAMqB,aAAa,aAAeN,EACpC,MAAO,GAAGN,MAAMC,KAAKV,EAAMsB,OACxBvC,KAAI,SAACwC,GAAD,OAAUA,EAAKrC,QACnBsC,KAAK,MAGV,IAAwC,IAApCxB,EAAM1B,MAAMmD,QAAQP,GAAmB,CACzC,IAAMQ,EAAgB1B,EAAM1B,MAAMqD,MAAMR,GAExC,OAAOO,EAAcA,EAAchE,OAAS,GAG9C,OAAOsC,EAAM1B,OAGf,SAASsD,IACP,IAAM1B,EAAQ2B,KAAK1B,WAAWC,cAAcX,EAASE,iBAErD,GAAIO,EAAO,CACT,IAAMK,EAAUD,EAAmBJ,GAC7B4B,EAAaV,EAAiBS,MAEhCC,EAAWpE,OACb6C,EAAQF,YAAcyB,EAEtBjB,EAAmBgB,OAKzB,SAASE,IAIP,IAHA,IAAMC,EAAiB,GAAGvB,MAAMC,KAAKmB,KAAKI,iBAAiBxC,EAASI,QACjER,QAAO,SAACW,GAAD,QAAaA,EAAMc,qBAEpB7B,EAAI,EAAGiD,EAAMF,EAAetE,OAAQuB,EAAIiD,EAAKjD,IACpD4B,EAAmBmB,EAAe/C,ICvCtC,IAAMkD,EAAiB,oBACjBC,EAAQ,CACZC,UAAc,QACdC,YAAc,gBAGU,CACxBC,KADwB,SACnBC,EAAqCC,QAA8B,IAAnED,IAAAA,EAAgB/C,EAASC,iBAA0C,IAA9B+C,IAAAA,EAAehD,EAASG,MAIhE,IAHA,IAAM8C,EAAsB,GAAGjC,MAAMC,KAAKiC,SAASV,iBAAiBO,IAC9DI,EAAW,GAAGnC,MAAMC,KAAKiC,SAASV,iBAAiBQ,IAEhDxD,EAAI,EAAGiD,EAAMQ,EAAoBhF,OAAQuB,EAAIiD,EAAKjD,IAAK,CAC9D,IAAMe,EAAQ0C,EAAoBzD,GAElC4D,OAAOC,eAAe9C,EAAOmC,EAAgB,CAC3C7D,MAAO,CACL2B,YAAaF,EAAeC,IAE9B+C,UAAU,IAGZnB,EAAkBlB,KAAKV,GACvBA,EAAMgD,iBAAiBZ,EAAME,YAAaV,GAG5C,IAAK,IAAI3C,EAAI,EAAGiD,EAAMU,EAASlF,OAAQuB,EAAIiD,EAAKjD,IAC9C2D,EAAS3D,GAAG+D,iBAAiBZ,EAAMC,UAAWN,GAC9Cc,OAAOC,eAAeF,EAAS3D,GAAIkD,EAAgB,CACjD7D,OAAO,EACPyE,UAAU,KAKhBE,QA5BwB,WAkCtB,IALA,IAAML,EAAW,GAAGnC,MAAMC,KAAKiC,SAASV,iBAAiBxC,EAASG,OAC/DP,QAAO,SAAC6D,GAAD,QAAYA,EAAKpC,qBACrB4B,EAAsB,GAAGjC,MAAMC,KAAKiC,SAASV,iBAAiBxC,EAASI,QAC1ER,QAAO,SAACW,GAAD,QAAaA,EAAMc,qBAEpB7B,EAAI,EAAGiD,EAAMQ,EAAoBhF,OAAQuB,EAAIiD,EAAKjD,IAAK,CAC9D,IAAMe,EAAQ0C,EAAoBzD,GAElC4B,EAAmBb,GACnBA,EAAMmC,QAAkBgB,EAExBnD,EAAMoD,oBAAoBhB,EAAME,YAAaV,GAG/C,IAAK,IAAI3C,EAAI,EAAGiD,EAAMU,EAASlF,OAAQuB,EAAIiD,EAAKjD,IAC9C2D,EAAS3D,GAAGmE,oBAAoBhB,EAAMC,UAAWN,GACjDa,EAAS3D,GAAGkD,QAAkBgB","sources":["app/customer/CouponCode.js","../node_modules/bs-custom-file-input/src/selector.js","../node_modules/bs-custom-file-input/src/util.js","../node_modules/bs-custom-file-input/src/eventHandlers.js","../node_modules/bs-custom-file-input/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios'\r\nimport {postData, url,writeDate,postAttachment,convertDate} from '../../action'\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst CouponCode = () => {\r\n    const [Name, setName]= React.useState()\r\n    const [Code,setCode]= React.useState()\r\n    const [Offer,setOffer]= React.useState()\r\n    const [Error,setError]= React.useState()\r\n    const [Action,setAction]= React.useState(false)\r\n    const [Data, setData]= React.useState(null)\r\n    const auth = getAuth(app)\r\n    const [Category,setCategory]= React.useState()\r\n    const [ImageSize,setImageSize]= React.useState(false)\r\n    const brands=useSelector(state => state.brands)\r\n    const [CouponUser,setCouponUser]= React.useState()\r\n\r\n    React.useEffect(() => {\r\n        postData(url + '/getData',{\r\n            tableName: 'cuppon_code', \r\n        }).then(data=>{\r\n            if(Array.isArray(data)){\r\n                setData(data)\r\n            }\r\n        })\r\n    },[Action])\r\n    React.useEffect(()=>{\r\n      postData(url + '/getData',{\r\n        tableName: 'cuppon_user',\r\n      }).then(user=>{\r\n        if(Array.isArray(user)&& user.length>0){\r\n         return setCouponUser(user)\r\n        }\r\n        console.log(user);\r\n      })\r\n    },[])\r\n    const deleteData = (id) => {\r\n        postData(url + '/deleteData', {\r\n            tableName: 'cuppon_code',\r\n            condition:'id='+id,\r\n        }).then(data => {\r\n            console.log(data)\r\n            setAction(!Action)\r\n        })\r\n    }\r\n\r\n    const save=()=>{\r\n      \r\n        \r\n        if(!Offer || !Code || !Name){\r\n            setError(\"Field are can not be empty\")\r\n            return;\r\n        }\r\n        if(Offer<0 || Offer>99){\r\n          setError('Offer percentage can be 0 to 99')\r\n          return\r\n        }\r\n        postData(url + '/setData',{\r\n            auth: auth.currentUser,\r\n            tableName: 'cuppon_code',\r\n            columns: ['name','code','offer'],\r\n            values: [Name,Code,Offer]\r\n          }).then(result => {\r\n            console.log(result);\r\n            if(result.insertId){\r\n              setError('Code is added successfully')\r\n              setAction(!Action)\r\n            }else{\r\n              setError(result.message)\r\n            }\r\n          })\r\n      }\r\n    return (\r\n        <div>\r\n        <div className=\"page-header\">\r\n          <h3 className=\"page-title\"> Coupon Codes </h3>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>All</a></li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Coupons</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>\r\n                <form className=\"form-sample\">\r\n                  <p className=\"card-description\"> Add coupon code for give extra bonus. </p>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Title of the code</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control placeholder='eg. You receive 20% discount' onChange={(e)=>setName(e.target.value)}  type=\"text\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Code</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>setCode(e.target.value)} placeholder='eg. XKLSCT' type=\"text\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                <div className=\"row\">\r\n                   \r\n                    <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                        <label className=\"col-sm-3 col-form-label\">Offer in %</label>\r\n                        <div className=\"col-sm-9\">\r\n                        <Form.Control onChange={(e)=>{\r\n                          setOffer(e.target.value)\r\n                          console.log(e.target.value)\r\n                          }}  placeholder='eg. 20' type=\"number\" />\r\n                        </div>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                  {Error?(\r\n                  <div className=\"alert alert-primary\" role=\"alert\">{Error}</div>\r\n                ):(\r\n                  <></>\r\n                )}\r\n                \r\n                </form>\r\n                <button onClick={save} className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Information</h4>\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th> Name </th>\r\n                        <th> Offer in % </th>\r\n                        <th> Code </th>\r\n                        <th>Total User</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        Data?(\r\n                            Data.length>0 ?(\r\n                                Data.map((doc, i) => (\r\n                                <tr key={i}>\r\n                                <td>{doc.name}</td>\r\n                                <td>\r\n                                {doc.offer}\r\n                                </td>\r\n                                <td>{doc.code}</td>\r\n                                <td>\r\n                                  {\r\n                                    CouponUser?\r\n                                    CouponUser.filter(d=>d.code==doc.code).length:'0'\r\n                                  }\r\n                                </td>\r\n                                <td>\r\n                                <button className='btn btn-gradient-danger btn-rounded btn-fw' onClick={()=>{\r\n                                    deleteData(doc.id)\r\n                                }}>\r\n                                Delete\r\n                                </button>\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            ):(\r\n                                <tr><td>No data available</td></tr>\r\n                            )\r\n                        ):(<tr><td>Loading...</td></tr>)\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default CouponCode;","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"names":["React","Name","setName","Code","setCode","Offer","setOffer","Error","setError","Action","setAction","Data","setData","auth","getAuth","app","useSelector","state","brands","CouponUser","setCouponUser","postData","url","tableName","then","data","Array","isArray","user","length","console","log","className","href","onClick","event","preventDefault","placeholder","onChange","e","target","value","type","role","currentUser","columns","values","result","insertId","message","map","doc","i","name","offer","code","filter","d","id","condition","Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","slice","call","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","window","File","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","files","file","join","indexOf","splittedValue","split","handleInputChange","this","inputValue","handleFormReset","customFileList","querySelectorAll","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener"],"sourceRoot":""}