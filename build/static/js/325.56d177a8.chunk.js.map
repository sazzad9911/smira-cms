{"version":3,"file":"static/js/325.56d177a8.chunk.js","mappings":"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","sources":["app/brands/Add.js","../node_modules/bs-custom-file-input/src/selector.js","../node_modules/bs-custom-file-input/src/util.js","../node_modules/bs-custom-file-input/src/eventHandlers.js","../node_modules/bs-custom-file-input/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\nimport Axios from 'axios';\r\nimport {postData, url} from '../../action'\r\nimport { getAuth } from 'firebase/auth';\r\nimport app from './../../firebase'; \r\n\r\nconst Add = () => {\r\n    const [date,setDate] =React.useState(new Date())\r\n    const [Name, setName]= React.useState()\r\n    const [Type,setType]= React.useState()\r\n    const [Address,setAddress]= React.useState()\r\n    const [File,setFile]= React.useState()\r\n    const [Phone,setPhone]= React.useState()\r\n    const [error,setError]= React.useState('')\r\n    const auth = getAuth(app)\r\n    const [ImageSize,setImageSize]= React.useState(false)\r\n    const [Location,setLocation]= React.useState()\r\n\r\n    const save=() => {\r\n      if(!Name || !Address || !File || !Type ){\r\n        setError('Please fill all the required fields')\r\n        return\r\n      }\r\n      if(!ImageSize){\r\n        setError('You can only upload 400*400 images')\r\n        return\r\n      }\r\n      setError('Please wait...')\r\n      const data= new FormData()\r\n      data.append('file',File[0])\r\n      Axios.post(url+'/uploadWithData',data).then(res=>{\r\n        console.log(res.data)\r\n        if(res.data.url){\r\n          postData(url + '/setData',{\r\n            auth: auth.currentUser,\r\n            tableName: 'brands',\r\n            columns: ['name','image','type','popularity','phone','location','outlets'],\r\n            values: [Name.replace(/[^\\w\\s]/gi, ''),res.data.url,Type,0,Phone,Location,Address]\r\n          }).then(result => {\r\n            console.log(result);\r\n            if (result.insertId){\r\n              setError('Successfully added new brand. You can reload this page.')\r\n              setTimeout(() => {\r\n                window.location.reload()\r\n              },300)\r\n              return\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n    const imageSize=async(height,width,file)=>{\r\n      var url = URL.createObjectURL(file[0]);\r\n      var img = new Image;\r\n      \r\n      img.onload = function() {\r\n        if(img.width==width && img.height==height){\r\n          console.log(\"correct\")\r\n          setImageSize(true);\r\n          return true;\r\n        }else{\r\n          setImageSize(false);\r\n          URL.revokeObjectURL(img.src);\r\n          return false;\r\n        }\r\n      }\r\n      img.src = url;\r\n    }\r\n    return (\r\n        <div>\r\n          <div className=\"page-header\">\r\n            <h3 className=\"page-title\"> Add Brand </h3>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Brand</a></li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Add</li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Information</h4>\r\n                  <form className=\"form-sample\">\r\n                    <p className=\"card-description\"> Add new brand </p>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Brand Name</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setName(e.target.value)} placeholder='Brand name'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                      <label className=\"col-sm-3 col-form-label\">Brand Type</label>\r\n                      <div className=\"col-sm-9\">\r\n                        <select onChange={(e) => setType(e.target.value)} className=\"form-control\">\r\n                        <option value=''>Select</option>\r\n                          <option value='Restaurant'>Restaurant</option>\r\n                          <option value='Games'>Games</option>\r\n                          <option value='Camping'>Camping</option>\r\n                          <option value='Travel'>Travel</option>\r\n                          <option value='Shopping'>Shopping</option>\r\n                          <option value='Health'>Health</option>\r\n                          <option value='Services'>Services</option>\r\n                          <option value='Spa & Salons'>Spa & Salons</option>\r\n                        </select>\r\n                      </div>\r\n                    </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      {/* <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Main Branch Phone Number</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setPhone(e.target.value)} placeholder='eg. +913020394930' type=\"number\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div> */}\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Number of Outlets</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setAddress(e.target.value)} placeholder='eg. 3' type=\"number\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Upload Logo (400*400)</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>{\r\n                            imageSize(400,400,e.target.files)\r\n                            setFile(e.target.files)}} name='file' type=\"file\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                        \r\n                      </div>\r\n                      {/* <div className=\"col-md-6\">\r\n                      <Form.Group className=\"row\">\r\n                          <label className=\"col-sm-3 col-form-label\">Main Branch Location</label>\r\n                          <div className=\"col-sm-9\">\r\n                          <Form.Control onChange={(e)=>setLocation(e.target.value)} placeholder='give map link.'  type=\"text\" />\r\n                          </div>\r\n                        </Form.Group>\r\n                      </div> */}\r\n                    </div>\r\n                  </form>\r\n                  {error?(\r\n                    <div className=\"alert alert-primary\" role=\"alert\">{error}</div>\r\n                  ):(\r\n                    <></>\r\n                  )}\r\n                  <button onClick={save}  className='btn btn-gradient-secondary btn-rounded btn-fw'>SAVE</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n};\r\n\r\nexport default Add;","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"names":["React","Date","Name","setName","Type","setType","Address","setAddress","File","setFile","Phone","error","setError","auth","getAuth","app","ImageSize","setImageSize","Location","imageSize","height","width","file","url","URL","createObjectURL","img","Image","onload","console","log","revokeObjectURL","src","className","href","onClick","event","preventDefault","onChange","e","target","value","placeholder","type","files","name","role","data","FormData","append","Axios","then","res","postData","currentUser","tableName","columns","values","replace","result","insertId","setTimeout","window","location","reload","Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","length","slice","call","i","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","map","join","indexOf","splittedValue","split","handleInputChange","this","inputValue","handleFormReset","customFileList","querySelectorAll","filter","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener"],"sourceRoot":""}