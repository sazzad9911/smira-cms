{"version":3,"file":"static/js/3384.816c8a2b.chunk.js","mappings":"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","sources":["app/member/AllMember.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport {postData,url,convertDate} from '../../action';\r\n\r\nconst AllMember = () => { \r\n    const userInfo = useSelector(state => state.userInfo)\r\n    const history = useHistory()\r\n    const [TotalPage,setTotalPage]= React.useState([])\r\n    const [Page,setPage]= React.useState(1)\r\n    const [Data, setData]= React.useState(null)\r\n    const [SearchValue,setSearchValue]= React.useState(null)\r\n\r\n    React.useEffect(() => {\r\n        postData(url+'/getData',{\r\n            tableName: 'user',\r\n            condition:SearchValue?`email like '${SearchValue}%' OR phone like '${SearchValue}%'`:'',\r\n            orderColumn:'id'\r\n        }).then(result=>{\r\n            if(Array.isArray(result)){\r\n                let arr=[]\r\n                result.forEach((doc,i) => {\r\n                if(i<(Page*10) && i>=((Page*10)-10)){\r\n                \r\n                arr.push(doc)\r\n                }\r\n            })\r\n            setData(arr)\r\n            let number=(result.length/10)\r\n            let floatNumber=parseInt(number)\r\n            let numPage=[]\r\n           for(let i=0; i<floatNumber; i++) {\r\n              numPage.push(floatNumber)\r\n            }\r\n      \r\n          if(number>floatNumber){\r\n          numPage.push(floatNumber)\r\n          setTotalPage(numPage)\r\n           }else{\r\n          setTotalPage(numPage)\r\n           }\r\n            }\r\n        })\r\n       \r\n    },[Page+SearchValue])\r\n    return (\r\n        <div>\r\n            <div className=\"page-header\">\r\n                <h3 className=\"page-title\"> All Members </h3>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><a href=\"#\" onClick={event => history.push('/dashboard')}>Members</a></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">All Members</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">All Members Information</h4>\r\n                            <p className=\"card-description\"> Use This <code>.information</code>\r\n                            </p>\r\n                            <div className=\"search-field d-none d-md-block\">\r\n                            <form className=\"d-flex align-items-center h-100\" action=\"#\">\r\n                              <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend bg-transparent\">\r\n                                  <i className=\"input-group-text border-0 mdi mdi-magnify\"></i>\r\n                                </div>\r\n                                <input onChange={e=>{\r\n                                    setSearchValue(e.target.value)\r\n                                }} type=\"text\" className=\"form-control bg-transparent border-0\" placeholder=\"Search by email\" />\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th> User </th>\r\n                                            <th> Full Name </th>\r\n                                            <th> Membership </th>\r\n                                            <th> Email </th>\r\n                                            <th> Phone </th>\r\n                                            <th>Creation Date </th>\r\n                                            <th> Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            Data ? (\r\n                                                Data.map((doc, i) => (\r\n                                                    <tr key={i}>\r\n                                                        <td className=\"py-1\">\r\n                                                        <img src={doc&&doc.image?doc.image:'https://thumbs.dreamstime.com/b/default-avatar-profile-icon-vector-default-avatar-profile-icon-vector-social-media-user-image-vector-illustration-227787227.jpg'} alt=\"profile\" />\r\n                                                        </td>\r\n                                                        <td> {doc.name ? doc.name : '--'} </td>\r\n                                                        <td> {doc.membership_type!=null ? \r\n                                                            doc.membership_type.match(/gold/)?'SCG':doc.membership_type.match(/silver/)?'SCS':\r\n                                                        doc.membership_type.match(/platinum/)?'SCP':doc.membership_type.match(/diamond/)?'SCD':'NON':''} </td>\r\n                                                        <td> {doc.email ? doc.email : '--'} </td>\r\n                                                        <td> {doc.phone ? doc.phone : '--'} </td>\r\n                                                        <td>{doc.creationTime?convertDate(doc.creationTime):''}</td>\r\n                                                        <td>\r\n                                                            <Link to={'/member_action/'+doc.uid}>\r\n                                                                Change Plan\r\n                                                            </Link>\r\n                                                        </td>\r\n                                                        \r\n                                                    </tr>\r\n                                                ))\r\n                                            ) : (\r\n                                                <td><td>Loading..</td></td>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            { TotalPage.length>1?(\r\n                    <nav style={{\r\n                        width: '100%',\r\n                        overflow: 'scroll'\r\n                    }} areaLabel=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page>1){\r\n                        setPage(Page-1)\r\n                    }\r\n                }} className=\"page-link\">Previous</button></li>\r\n                {\r\n                    TotalPage.map((doc, i) => (\r\n                      <li key={i} className={Page==(i+1)?\"page-item active\":\"page-item\"}><button onClick={()=>{\r\n                          setPage(i+1)\r\n                      }} className=\"page-link\">{i+1}</button></li>\r\n                     ))\r\n                }\r\n                <li className=\"page-item\"><button onClick={() =>{\r\n                    if(Page<TotalPage.length){\r\n                        setPage(Page+1);\r\n                    }\r\n                }} className=\"page-link\">Next</button></li>\r\n                </ul>\r\n               </nav>\r\n                ):(\r\n                    <></>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllMember;"],"names":["useSelector","state","userInfo","history","useHistory","React","TotalPage","setTotalPage","Page","setPage","Data","setData","SearchValue","setSearchValue","postData","url","tableName","condition","orderColumn","then","result","Array","isArray","arr","forEach","doc","i","push","number","length","floatNumber","parseInt","numPage","className","href","onClick","event","action","onChange","e","target","value","type","placeholder","map","src","image","alt","name","membership_type","match","email","phone","creationTime","convertDate","to","uid","style","width","overflow","areaLabel"],"sourceRoot":""}